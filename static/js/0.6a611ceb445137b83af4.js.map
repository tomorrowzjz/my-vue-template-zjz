{"version":3,"sources":["webpack:///./node_modules/vuedraggable/dist/vuedraggable.js","webpack:///./node_modules/sortablejs/Sortable.js","webpack:///./src/api/api.js"],"names":["Symbol","iterator","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_toConsumableArray","arr","Array","isArray","arr2","from","buildDraggable","Sortable","removeNode","node","parentElement","removeChild","insertNodeAt","fatherNode","position","refNode","children","nextSibling","insertBefore","emit","evtName","evtData","_this","this","$nextTick","$emit","toLowerCase","eventsListened","eventsToEmit","readonlyProperties","concat","map","evt","draggingElement","name","props","options","list","type","required","default","value","noTransitionOnDrag","Boolean","clone","Function","original","element","String","move","componentData","data","transitionMode","noneFunctionalComponentMode","init","render","h","slots","$slots","child","componentOptions","tag","headerOffset","_$slots","header","footer","attributes","update","object","propName","undefined","buildAttribute","$attrs","_componentData","on","_props","mounted","_this3","$el","nodeName","Error","optionsAdded","forEach","elt","_this2","realList","bind","onMove","originalEvent","onDragMove","draggable","_sortable","rootContainer","computeIndexes","beforeDestroy","destroy","computed","isCloning","group","pull","watch","handler","newOptionValue","property","indexOf","option","deep","methods","getChildrenNodes","$children","rawNodes","_this4","visibleIndexes","isTransition","elmFromNodes","elm","rawIndexes","filter","ind","_computeIndexes","getUnderlyingVm","htmlElt","index","vnodes","computeVmIndex","getUnderlyingPotencialDraggableComponent","_ref","__vue__","$options","_componentTag","$parent","emitChanges","_this5","alterList","onList","newList","spliceList","_arguments","splice","apply","updatePosition","oldIndex","newIndex","getRelatedContextFromMoveEvent","_ref2","to","related","component","context","destination","getVmIndex","domIndex","indexes","numberIndexes","getComponent","componentInstance","resetTransitionData","transitionContainer","kept","onDragStart","item","_underlying_vm_","onDragAdd","updateEvenemt","added","onDragRemove","removed","onDragUpdate","moved","updateProperty","propertyName","computeFutureIndex","relatedContext","domChildren","el","style","currentDOMIndex","currentIndex","willInsertAfter","draggedContext","futureIndex","onDragEnd","slice","__webpack_require__","module","exports","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","window","document","dragEl","parentEl","ghostEl","cloneEl","rootEl","nextEl","lastDownEl","scrollEl","scrollParentEl","scrollCustomFn","activeGroup","putSortable","pointerElemChangedInterval","lastPointerElemX","lastPointerElemY","tapEvt","touchEvt","lastTarget","lastDirection","lastMode","targetMoveDistance","realDragElRect","autoScrolls","scrolling","awaitingDragStarted","ignoreNextClick","sortables","pastFirstInvertThresh","isCircumstantialInvert","R_SPACE","expando","Date","getTime","win","parseInt","setTimeout","$","jQuery","Zepto","Polymer","captureMode","capture","passive","IE11OrLess","navigator","userAgent","match","Edge","CSSFloatProperty","supportDraggable","createElement","supportCssPointerEvents","cssText","pointerEvents","_silent","_alignedSilent","abs","Math","min","savedInputChecked","_detectDirection","elCSS","_css","elWidth","width","child1","_getChild","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginLeft","marginRight","_getRect","secondChildWidth","display","flexDirection","_getParentAutoScrollElement","includeSelf","getBoundingClientRect","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","parentNode","_autoScroll","_throttle","isFallback","scroll","sens","scrollSensitivity","speed","scrollSpeed","x","clientX","y","clientY","scrollThisInstance","innerWidth","innerHeight","_clearAutoScrolls","scrollFn","layersOut","currentParent","css","vx","vy","canScrollX","canScrollY","scrollPosX","scrollPosY","rect","top","bottom","left","right","height","scrollLeft","scrollTop","documentElement","clearInterval","pid","setInterval","layer","active","_emulateDragOver","scrollOffsetY","scrollOffsetX","scrollTo","pageXOffset","pageYOffset","bubbleScroll","autoScroll","_prepareGroup","toFn","sameGroup","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","_checkAlignment","_computeIsAligned","_isTrueParentSortable","trueParent","_artificalBubble","sortable","originalEvt","method","nextParent","_extend","artificialBubble","_hideGhostForTarget","_unhideGhostForTarget","addEventListener","preventDefault","stopPropagation","stopImmediatePropagation","_throttleTimeout","nearestEmptyInsertDetectEvent","nearest","threshold","emptyInsertThreshold","insideHorizontally","insideVertically","_detectNearestEmptySortable","_onDragOver","nodeType","toString","defaults","sort","disabled","store","handle","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","animation","easing","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","fn","charAt","nativeDraggable","_on","_onTapStart","push","get","_closest","selector","ctx","includeCTX","_matches","_getParentOrHost","host","event","_off","removeEventListener","_toggleClass","state","classList","className","replace","prop","val","defaultView","getComputedStyle","currentStyle","_matrix","appliedTransforms","transform","DOMMatrix","WebKitCSSMatrix","CSSMatrix","_find","tagName","getElementsByTagName","n","_dispatchEvent","targetEl","toEl","fromEl","startIndex","onName","toUpperCase","substr","CustomEvent","createEvent","initEvent","bubbles","cancelable","dispatchEvent","_onMove","dragRect","targetRect","retVal","onMoveFn","dragged","draggedRect","relatedRect","_disableDraggable","_unsilent","childNum","currentChild","_lastChild","last","lastElementChild","childElementCount","_generateId","str","src","href","sum","charCodeAt","_index","previousElementSibling","matches","msMatchesSelector","webkitMatchesSelector","_","callback","ms","args","dst","_clone","dom","cloneNode","_nextTick","_cancelNextTick","id","clearTimeout","_preventScroll","container","adjustForTransform","elRect","containerRect","matrix","scaleX","a","scaleY","d","constructor","elementFromPoint","axis","targetS1Opp","targetS2Opp","mouseOnOppAxis","sortableMouseAligned","_getDirection","touch","touches","originalTarget","shadowRoot","path","composedPath","root","inputs","idx","checked","_saveInputCheckedState","button","isContentEditable","split","some","criteria","trim","_prepareDragStart","_handleAutoScroll","fallback","ogElemScroller","newElem","dragStartFn","ownerDocument","_lastX","_lastY","transition","_disableDelayedDrag","_triggerDragStart","_onDrop","_delayedDragTouchMoveHandler","_dragStartTimer","e","pointerType","_onTouchMove","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","_appendGhost","_nulling","bypassLastTouchCheck","parent","dx","dy","translate3d","appendChild","_hideClone","_cloneId","_loopId","effectAllowed","_dragStartId","revert","activeSortable","isOwner","canSort","animated","completed","contains","lastPutMode","mouseOnAxis","targetS2","_ghostIsLast","_showClone","changed","_animate","targetBeforeFirstSwap","aligned","differentLevel","scrolledPastTop","side","elSide","parentSide","_isScrolledPast","el1","el2","el1Rect","el2Rect","el1S1Opp","el1S2Opp","el1OppLength","el2S1Opp","el2S2Opp","el2OppLength","_isElInRowColumn","isLastTarget","targetLength","targetS1","invert","_getSwapDirection","dragElIndex","targetIndex","_getInsertDirection","nextElementSibling","after","moveVector","prevRect","currentRect","offsetWidth","_offUpEvents","save","handleEvent","dropEffect","_globalDragOver","toArray","order","getAttribute","items","set","closest","querySelectorAll","removeAttribute","cloneHidden","utils","off","find","is","extend","throttle","toggleClass","nextTick","cancelNextTick","detectDirection","getChild","create","version","axios","headers","post","interceptors","request","use","config","error","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default","reject","response","__webpack_exports__","post_news","url","params","resolve","then","catch","fetch","Test"],"mappings":"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","file":"static/js/0.6a611ceb445137b83af4.js","sourcesContent":["'use strict';\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\r\n\r\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\r\n\r\n(function () {\r\n  \"use strict\";\r\n\r\n  if (!Array.from) {\r\n    Array.from = function (object) {\r\n      return [].slice.call(object);\r\n    };\r\n  }\r\n\r\n  function buildAttribute(object, propName, value) {\r\n    if (value == undefined) {\r\n      return object;\r\n    }\r\n    object = object == null ? {} : object;\r\n    object[propName] = value;\r\n    return object;\r\n  }\r\n\r\n  function buildDraggable(Sortable) {\r\n    function removeNode(node) {\r\n      node.parentElement.removeChild(node);\r\n    }\r\n\r\n    function insertNodeAt(fatherNode, node, position) {\r\n      var refNode = position === 0 ? fatherNode.children[0] : fatherNode.children[position - 1].nextSibling;\r\n      fatherNode.insertBefore(node, refNode);\r\n    }\r\n\r\n    function computeVmIndex(vnodes, element) {\r\n      return vnodes.map(function (elt) {\r\n        return elt.elm;\r\n      }).indexOf(element);\r\n    }\r\n\r\n    function _computeIndexes(slots, children, isTransition) {\r\n      if (!slots) {\r\n        return [];\r\n      }\r\n\r\n      var elmFromNodes = slots.map(function (elt) {\r\n        return elt.elm;\r\n      });\r\n      var rawIndexes = [].concat(_toConsumableArray(children)).map(function (elt) {\r\n        return elmFromNodes.indexOf(elt);\r\n      });\r\n      return isTransition ? rawIndexes.filter(function (ind) {\r\n        return ind !== -1;\r\n      }) : rawIndexes;\r\n    }\r\n\r\n    function emit(evtName, evtData) {\r\n      var _this = this;\r\n\r\n      this.$nextTick(function () {\r\n        return _this.$emit(evtName.toLowerCase(), evtData);\r\n      });\r\n    }\r\n\r\n    function delegateAndEmit(evtName) {\r\n      var _this2 = this;\r\n\r\n      return function (evtData) {\r\n        if (_this2.realList !== null) {\r\n          _this2['onDrag' + evtName](evtData);\r\n        }\r\n        emit.call(_this2, evtName, evtData);\r\n      };\r\n    }\r\n\r\n    var eventsListened = ['Start', 'Add', 'Remove', 'Update', 'End'];\r\n    var eventsToEmit = ['Choose', 'Sort', 'Filter', 'Clone'];\r\n    var readonlyProperties = ['Move'].concat(eventsListened, eventsToEmit).map(function (evt) {\r\n      return 'on' + evt;\r\n    });\r\n    var draggingElement = null;\r\n\r\n    var props = {\r\n      options: Object,\r\n      list: {\r\n        type: Array,\r\n        required: false,\r\n        default: null\r\n      },\r\n      value: {\r\n        type: Array,\r\n        required: false,\r\n        default: null\r\n      },\r\n      noTransitionOnDrag: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      clone: {\r\n        type: Function,\r\n        default: function _default(original) {\r\n          return original;\r\n        }\r\n      },\r\n      element: {\r\n        type: String,\r\n        default: 'div'\r\n      },\r\n      move: {\r\n        type: Function,\r\n        default: null\r\n      },\r\n      componentData: {\r\n        type: Object,\r\n        required: false,\r\n        default: null\r\n      }\r\n    };\r\n\r\n    var draggableComponent = {\r\n      name: 'draggable',\r\n\r\n      props: props,\r\n\r\n      data: function data() {\r\n        return {\r\n          transitionMode: false,\r\n          noneFunctionalComponentMode: false,\r\n          init: false\r\n        };\r\n      },\r\n      render: function render(h) {\r\n        var slots = this.$slots.default;\r\n        if (slots && slots.length === 1) {\r\n          var child = slots[0];\r\n          if (child.componentOptions && child.componentOptions.tag === \"transition-group\") {\r\n            this.transitionMode = true;\r\n          }\r\n        }\r\n        var headerOffset = 0;\r\n        var children = slots;\r\n        var _$slots = this.$slots,\r\n            header = _$slots.header,\r\n            footer = _$slots.footer;\r\n\r\n        if (header) {\r\n          headerOffset = header.length;\r\n          children = children ? [].concat(_toConsumableArray(header), _toConsumableArray(children)) : [].concat(_toConsumableArray(header));\r\n        }\r\n        if (footer) {\r\n          children = children ? [].concat(_toConsumableArray(children), _toConsumableArray(footer)) : [].concat(_toConsumableArray(footer));\r\n        }\r\n        this.headerOffset = headerOffset;\r\n        var attributes = null;\r\n        var update = function update(name, value) {\r\n          attributes = buildAttribute(attributes, name, value);\r\n        };\r\n        update('attrs', this.$attrs);\r\n        if (this.componentData) {\r\n          var _componentData = this.componentData,\r\n              on = _componentData.on,\r\n              _props = _componentData.props;\r\n\r\n          update('on', on);\r\n          update('props', _props);\r\n        }\r\n        return h(this.element, attributes, children);\r\n      },\r\n      mounted: function mounted() {\r\n        var _this3 = this;\r\n\r\n        this.noneFunctionalComponentMode = this.element.toLowerCase() !== this.$el.nodeName.toLowerCase();\r\n        if (this.noneFunctionalComponentMode && this.transitionMode) {\r\n          throw new Error('Transition-group inside component is not supported. Please alter element value or remove transition-group. Current element value: ' + this.element);\r\n        }\r\n        var optionsAdded = {};\r\n        eventsListened.forEach(function (elt) {\r\n          optionsAdded['on' + elt] = delegateAndEmit.call(_this3, elt);\r\n        });\r\n\r\n        eventsToEmit.forEach(function (elt) {\r\n          optionsAdded['on' + elt] = emit.bind(_this3, elt);\r\n        });\r\n\r\n        var options = _extends({}, this.options, optionsAdded, { onMove: function onMove(evt, originalEvent) {\r\n            return _this3.onDragMove(evt, originalEvent);\r\n          } });\r\n        !('draggable' in options) && (options.draggable = '>*');\r\n        this._sortable = new Sortable(this.rootContainer, options);\r\n        this.computeIndexes();\r\n      },\r\n      beforeDestroy: function beforeDestroy() {\r\n        if (this._sortable !== undefined) this._sortable.destroy();\r\n      },\r\n\r\n\r\n      computed: {\r\n        rootContainer: function rootContainer() {\r\n          return this.transitionMode ? this.$el.children[0] : this.$el;\r\n        },\r\n        isCloning: function isCloning() {\r\n          return !!this.options && !!this.options.group && this.options.group.pull === 'clone';\r\n        },\r\n        realList: function realList() {\r\n          return !!this.list ? this.list : this.value;\r\n        }\r\n      },\r\n\r\n      watch: {\r\n        options: {\r\n          handler: function handler(newOptionValue) {\r\n            for (var property in newOptionValue) {\r\n              if (readonlyProperties.indexOf(property) == -1) {\r\n                this._sortable.option(property, newOptionValue[property]);\r\n              }\r\n            }\r\n          },\r\n\r\n          deep: true\r\n        },\r\n\r\n        realList: function realList() {\r\n          this.computeIndexes();\r\n        }\r\n      },\r\n\r\n      methods: {\r\n        getChildrenNodes: function getChildrenNodes() {\r\n          if (!this.init) {\r\n            this.noneFunctionalComponentMode = this.noneFunctionalComponentMode && this.$children.length == 1;\r\n            this.init = true;\r\n          }\r\n\r\n          if (this.noneFunctionalComponentMode) {\r\n            return this.$children[0].$slots.default;\r\n          }\r\n          var rawNodes = this.$slots.default;\r\n          return this.transitionMode ? rawNodes[0].child.$slots.default : rawNodes;\r\n        },\r\n        computeIndexes: function computeIndexes() {\r\n          var _this4 = this;\r\n\r\n          this.$nextTick(function () {\r\n            _this4.visibleIndexes = _computeIndexes(_this4.getChildrenNodes(), _this4.rootContainer.children, _this4.transitionMode);\r\n          });\r\n        },\r\n        getUnderlyingVm: function getUnderlyingVm(htmlElt) {\r\n          var index = computeVmIndex(this.getChildrenNodes() || [], htmlElt);\r\n          if (index === -1) {\r\n            //Edge case during move callback: related element might be\r\n            //an element different from collection\r\n            return null;\r\n          }\r\n          var element = this.realList[index];\r\n          return { index: index, element: element };\r\n        },\r\n        getUnderlyingPotencialDraggableComponent: function getUnderlyingPotencialDraggableComponent(_ref) {\r\n          var __vue__ = _ref.__vue__;\r\n\r\n          if (!__vue__ || !__vue__.$options || __vue__.$options._componentTag !== \"transition-group\") {\r\n            return __vue__;\r\n          }\r\n          return __vue__.$parent;\r\n        },\r\n        emitChanges: function emitChanges(evt) {\r\n          var _this5 = this;\r\n\r\n          this.$nextTick(function () {\r\n            _this5.$emit('change', evt);\r\n          });\r\n        },\r\n        alterList: function alterList(onList) {\r\n          if (!!this.list) {\r\n            onList(this.list);\r\n          } else {\r\n            var newList = [].concat(_toConsumableArray(this.value));\r\n            onList(newList);\r\n            this.$emit('input', newList);\r\n          }\r\n        },\r\n        spliceList: function spliceList() {\r\n          var _arguments = arguments;\r\n\r\n          var spliceList = function spliceList(list) {\r\n            return list.splice.apply(list, _arguments);\r\n          };\r\n          this.alterList(spliceList);\r\n        },\r\n        updatePosition: function updatePosition(oldIndex, newIndex) {\r\n          var updatePosition = function updatePosition(list) {\r\n            return list.splice(newIndex, 0, list.splice(oldIndex, 1)[0]);\r\n          };\r\n          this.alterList(updatePosition);\r\n        },\r\n        getRelatedContextFromMoveEvent: function getRelatedContextFromMoveEvent(_ref2) {\r\n          var to = _ref2.to,\r\n              related = _ref2.related;\r\n\r\n          var component = this.getUnderlyingPotencialDraggableComponent(to);\r\n          if (!component) {\r\n            return { component: component };\r\n          }\r\n          var list = component.realList;\r\n          var context = { list: list, component: component };\r\n          if (to !== related && list && component.getUnderlyingVm) {\r\n            var destination = component.getUnderlyingVm(related);\r\n            if (destination) {\r\n              return _extends(destination, context);\r\n            }\r\n          }\r\n\r\n          return context;\r\n        },\r\n        getVmIndex: function getVmIndex(domIndex) {\r\n          var indexes = this.visibleIndexes;\r\n          var numberIndexes = indexes.length;\r\n          return domIndex > numberIndexes - 1 ? numberIndexes : indexes[domIndex];\r\n        },\r\n        getComponent: function getComponent() {\r\n          return this.$slots.default[0].componentInstance;\r\n        },\r\n        resetTransitionData: function resetTransitionData(index) {\r\n          if (!this.noTransitionOnDrag || !this.transitionMode) {\r\n            return;\r\n          }\r\n          var nodes = this.getChildrenNodes();\r\n          nodes[index].data = null;\r\n          var transitionContainer = this.getComponent();\r\n          transitionContainer.children = [];\r\n          transitionContainer.kept = undefined;\r\n        },\r\n        onDragStart: function onDragStart(evt) {\r\n          this.context = this.getUnderlyingVm(evt.item);\r\n          evt.item._underlying_vm_ = this.clone(this.context.element);\r\n          draggingElement = evt.item;\r\n        },\r\n        onDragAdd: function onDragAdd(evt) {\r\n          this.updateEvenemt(evt);\r\n          var element = evt.item._underlying_vm_;\r\n          if (element === undefined) {\r\n            return;\r\n          }\r\n          removeNode(evt.item);\r\n          var newIndex = this.getVmIndex(evt.newIndex);\r\n          this.spliceList(newIndex, 0, element);\r\n          this.computeIndexes();\r\n          var added = { element: element, newIndex: newIndex };\r\n          this.emitChanges({ added: added });\r\n        },\r\n        onDragRemove: function onDragRemove(evt) {\r\n          this.updateEvenemt(evt);\r\n          insertNodeAt(this.rootContainer, evt.item, evt.oldIndex);\r\n          if (this.isCloning) {\r\n            removeNode(evt.clone);\r\n            return;\r\n          }\r\n          var oldIndex = this.context.index;\r\n          this.spliceList(oldIndex, 1);\r\n          var removed = { element: this.context.element, oldIndex: oldIndex };\r\n          this.resetTransitionData(oldIndex);\r\n          this.emitChanges({ removed: removed });\r\n        },\r\n        onDragUpdate: function onDragUpdate(evt) {\r\n          this.updateEvenemt(evt);\r\n          removeNode(evt.item);\r\n          insertNodeAt(evt.from, evt.item, evt.oldIndex);\r\n          var oldIndex = this.context.index;\r\n          var newIndex = this.getVmIndex(evt.newIndex);\r\n          this.updatePosition(oldIndex, newIndex);\r\n          var moved = { element: this.context.element, oldIndex: oldIndex, newIndex: newIndex };\r\n          this.emitChanges({ moved: moved });\r\n        },\r\n        updateEvenemt: function updateEvenemt(evt) {\r\n          this.updateProperty(evt, 'newIndex');\r\n          this.updateProperty(evt, 'oldIndex');\r\n        },\r\n        updateProperty: function updateProperty(evt, propertyName) {\r\n          evt.hasOwnProperty(propertyName) && (evt[propertyName] += this.headerOffset);\r\n        },\r\n        computeFutureIndex: function computeFutureIndex(relatedContext, evt) {\r\n          if (!relatedContext.element) {\r\n            return 0;\r\n          }\r\n          var domChildren = [].concat(_toConsumableArray(evt.to.children)).filter(function (el) {\r\n            return el.style['display'] !== 'none';\r\n          });\r\n          var currentDOMIndex = domChildren.indexOf(evt.related);\r\n          var currentIndex = relatedContext.component.getVmIndex(currentDOMIndex);\r\n          var draggedInList = domChildren.indexOf(draggingElement) != -1;\r\n          return draggedInList || !evt.willInsertAfter ? currentIndex : currentIndex + 1;\r\n        },\r\n        onDragMove: function onDragMove(evt, originalEvent) {\r\n          var onMove = this.move;\r\n          if (!onMove || !this.realList) {\r\n            return true;\r\n          }\r\n\r\n          var relatedContext = this.getRelatedContextFromMoveEvent(evt);\r\n          var draggedContext = this.context;\r\n          var futureIndex = this.computeFutureIndex(relatedContext, evt);\r\n          _extends(draggedContext, { futureIndex: futureIndex });\r\n          _extends(evt, { relatedContext: relatedContext, draggedContext: draggedContext });\r\n          return onMove(evt, originalEvent);\r\n        },\r\n        onDragEnd: function onDragEnd(evt) {\r\n          this.computeIndexes();\r\n          draggingElement = null;\r\n        }\r\n      }\r\n    };\r\n    return draggableComponent;\r\n  }\r\n\r\n  if (typeof exports == \"object\") {\r\n    var Sortable = require(\"sortablejs\");\r\n    module.exports = buildDraggable(Sortable);\r\n  } else if (typeof define == \"function\" && define.amd) {\r\n    define(['sortablejs'], function (Sortable) {\r\n      return buildDraggable(Sortable);\r\n    });\r\n  } else if (window && window.Vue && window.Sortable) {\r\n    var draggable = buildDraggable(window.Sortable);\r\n    Vue.component('draggable', draggable);\r\n  }\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vuedraggable/dist/vuedraggable.js\n// module id = DAYN\n// module chunks = 0","/**!\r\n * Sortable\r\n * @author\tRubaXa   <trash@rubaxa.org>\r\n * @author\towenm    <owen23355@gmail.com>\r\n * @license MIT\r\n */\r\n\r\n(function sortableModule(factory) {\r\n\t\"use strict\";\r\n\r\n\tif (typeof define === \"function\" && define.amd) {\r\n\t\tdefine(factory);\r\n\t}\r\n\telse if (typeof module != \"undefined\" && typeof module.exports != \"undefined\") {\r\n\t\tmodule.exports = factory();\r\n\t}\r\n\telse {\r\n\t\t/* jshint sub:true */\r\n\t\twindow[\"Sortable\"] = factory();\r\n\t}\r\n})(function sortableFactory() {\r\n\t\"use strict\";\r\n\r\n\tif (typeof window === \"undefined\" || !window.document) {\r\n\t\treturn function sortableError() {\r\n\t\t\tthrow new Error(\"Sortable.js requires a window with a document\");\r\n\t\t};\r\n\t}\r\n\r\n\tvar dragEl,\r\n\t\tparentEl,\r\n\t\tghostEl,\r\n\t\tcloneEl,\r\n\t\trootEl,\r\n\t\tnextEl,\r\n\t\tlastDownEl,\r\n\r\n\t\tscrollEl,\r\n\t\tscrollParentEl,\r\n\t\tscrollCustomFn,\r\n\r\n\t\toldIndex,\r\n\t\tnewIndex,\r\n\r\n\t\tactiveGroup,\r\n\t\tputSortable,\r\n\r\n\t\tautoScrolls = [],\r\n\t\tscrolling = false,\r\n\r\n\t\tawaitingDragStarted = false,\r\n\t\tignoreNextClick = false,\r\n\t\tsortables = [],\r\n\r\n\t\tpointerElemChangedInterval,\r\n\t\tlastPointerElemX,\r\n\t\tlastPointerElemY,\r\n\r\n\t\ttapEvt,\r\n\t\ttouchEvt,\r\n\r\n\t\tmoved,\r\n\r\n\r\n\t\tlastTarget,\r\n\t\tlastDirection,\r\n\t\tpastFirstInvertThresh = false,\r\n\t\tisCircumstantialInvert = false,\r\n\t\tlastMode, // 'swap' or 'insert'\r\n\r\n\t\ttargetMoveDistance,\r\n\r\n\r\n\t\tforRepaintDummy,\r\n\t\trealDragElRect, // dragEl rect after current animation\r\n\r\n\t\t/** @const */\r\n\t\tR_SPACE = /\\s+/g,\r\n\r\n\t\texpando = 'Sortable' + (new Date).getTime(),\r\n\r\n\t\twin = window,\r\n\t\tdocument = win.document,\r\n\t\tparseInt = win.parseInt,\r\n\t\tsetTimeout = win.setTimeout,\r\n\r\n\t\t$ = win.jQuery || win.Zepto,\r\n\t\tPolymer = win.Polymer,\r\n\r\n\t\tcaptureMode = {\r\n\t\t\tcapture: false,\r\n\t\t\tpassive: false\r\n\t\t},\r\n\r\n\t\tIE11OrLess = !!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\\.|msie|iemobile)/i),\r\n\t\tEdge = !!navigator.userAgent.match(/Edge/i),\r\n\t\t// FireFox = !!navigator.userAgent.match(/firefox/i),\r\n\r\n\t\tCSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\r\n\r\n\t\t// This will not pass for IE9, because IE9 DnD only works on anchors\r\n\t\tsupportDraggable = ('draggable' in document.createElement('div')),\r\n\r\n\t\tsupportCssPointerEvents = (function() {\r\n\t\t\t// false when <= IE11\r\n\t\t\tif (IE11OrLess) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar el = document.createElement('x');\r\n\t\t\tel.style.cssText = 'pointer-events:auto';\r\n\t\t\treturn el.style.pointerEvents === 'auto';\r\n\t\t})(),\r\n\r\n\t\t_silent = false,\r\n\t\t_alignedSilent = false,\r\n\r\n\t\tabs = Math.abs,\r\n\t\tmin = Math.min,\r\n\r\n\t\tsavedInputChecked = [],\r\n\r\n\t\t_detectDirection = function(el, options) {\r\n\t\t\tvar elCSS = _css(el),\r\n\t\t\t\telWidth = parseInt(elCSS.width),\r\n\t\t\t\tchild1 = _getChild(el, 0, options),\r\n\t\t\t\tchild2 = _getChild(el, 1, options),\r\n\t\t\t\tfirstChildCSS = child1 && _css(child1),\r\n\t\t\t\tsecondChildCSS = child2 && _css(child2),\r\n\t\t\t\tfirstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + _getRect(child1).width,\r\n\t\t\t\tsecondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + _getRect(child2).width;\r\n\t\t\tif (elCSS.display === 'flex') {\r\n\t\t\t\treturn elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse'\r\n\t\t\t\t? 'vertical' : 'horizontal';\r\n\t\t\t}\r\n\t\t\treturn (child1 &&\r\n\t\t\t\t(\r\n\t\t\t\t\tfirstChildCSS.display === 'block' ||\r\n\t\t\t\t\tfirstChildCSS.display === 'flex' ||\r\n\t\t\t\t\tfirstChildCSS.display === 'table' ||\r\n\t\t\t\t\tfirstChildCSS.display === 'grid' ||\r\n\t\t\t\t\tfirstChildWidth >= elWidth &&\r\n\t\t\t\t\telCSS[CSSFloatProperty] === 'none' ||\r\n\t\t\t\t\tchild2 &&\r\n\t\t\t\t\telCSS[CSSFloatProperty] === 'none' &&\r\n\t\t\t\t\tfirstChildWidth + secondChildWidth > elWidth\r\n\t\t\t\t) ?\r\n\t\t\t\t'vertical' : 'horizontal'\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\r\n\t\t * @param  {Number} x      X position\r\n\t\t * @param  {Number} y      Y position\r\n\t\t * @return {HTMLElement}   Element of the first found nearest Sortable\r\n\t\t */\r\n\t\t_detectNearestEmptySortable = function(x, y) {\r\n\t\t\tfor (var i = 0; i < sortables.length; i++) {\r\n\t\t\t\tif (sortables[i].children.length) continue;\r\n\r\n\t\t\t\tvar rect = _getRect(sortables[i]),\r\n\t\t\t\t\tthreshold = sortables[i][expando].options.emptyInsertThreshold,\r\n\t\t\t\t\tinsideHorizontally = x >= (rect.left - threshold) && x <= (rect.right + threshold),\r\n\t\t\t\t\tinsideVertically = y >= (rect.top - threshold) && y <= (rect.bottom + threshold);\r\n\r\n\t\t\t\tif (insideHorizontally && insideVertically) {\r\n\t\t\t\t\treturn sortables[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_isClientInRowColumn = function(x, y, el, axis, options) {\r\n\t\t\tvar targetRect = _getRect(el),\r\n\t\t\t\ttargetS1Opp = axis === 'vertical' ? targetRect.left : targetRect.top,\r\n\t\t\t\ttargetS2Opp = axis === 'vertical' ? targetRect.right : targetRect.bottom,\r\n\t\t\t\tmouseOnOppAxis = axis === 'vertical' ? x : y;\r\n\r\n\t\t\treturn targetS1Opp < mouseOnOppAxis && mouseOnOppAxis < targetS2Opp;\r\n\t\t},\r\n\r\n\t\t_isElInRowColumn = function(el1, el2, axis) {\r\n\t\t\tvar el1Rect = el1 === dragEl && realDragElRect || _getRect(el1),\r\n\t\t\t\tel2Rect = el2 === dragEl && realDragElRect || _getRect(el2),\r\n\t\t\t\tel1S1Opp = axis === 'vertical' ? el1Rect.left : el1Rect.top,\r\n\t\t\t\tel1S2Opp = axis === 'vertical' ? el1Rect.right : el1Rect.bottom,\r\n\t\t\t\tel1OppLength = axis === 'vertical' ? el1Rect.width : el1Rect.height,\r\n\t\t\t\tel2S1Opp = axis === 'vertical' ? el2Rect.left : el2Rect.top,\r\n\t\t\t\tel2S2Opp = axis === 'vertical' ? el2Rect.right : el2Rect.bottom,\r\n\t\t\t\tel2OppLength = axis === 'vertical' ? el2Rect.width : el2Rect.height;\r\n\r\n\t\t\treturn (\r\n\t\t\t\tel1S1Opp === el2S1Opp ||\r\n\t\t\t\tel1S2Opp === el2S2Opp ||\r\n\t\t\t\t(el1S1Opp + el1OppLength / 2) === (el2S1Opp + el2OppLength / 2)\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t_getParentAutoScrollElement = function(el, includeSelf) {\r\n\t\t\t// skip to window\r\n\t\t\tif (!el || !el.getBoundingClientRect) return win;\r\n\r\n\t\t\tvar elem = el;\r\n\t\t\tvar gotSelf = false;\r\n\t\t\tdo {\r\n\t\t\t\t// we don't need to get elem css if it isn't even overflowing in the first place (performance)\r\n\t\t\t\tif (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\r\n\t\t\t\t\tvar elemCSS = _css(elem);\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\telem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') ||\r\n\t\t\t\t\t\telem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tif (!elem || !elem.getBoundingClientRect || elem === document.body) return win;\r\n\r\n\t\t\t\t\t\tif (gotSelf || includeSelf) return elem;\r\n\t\t\t\t\t\tgotSelf = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t/* jshint boss:true */\r\n\t\t\t} while (elem = elem.parentNode);\r\n\r\n\t\t\treturn win;\r\n\t\t},\r\n\r\n\t\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl, /**Boolean*/isFallback) {\r\n\t\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\r\n\t\t\tif (options.scroll) {\r\n\t\t\t\tvar _this = rootEl ? rootEl[expando] : window,\r\n\t\t\t\t\tsens = options.scrollSensitivity,\r\n\t\t\t\t\tspeed = options.scrollSpeed,\r\n\r\n\t\t\t\t\tx = evt.clientX,\r\n\t\t\t\t\ty = evt.clientY,\r\n\r\n\t\t\t\t\twinWidth = window.innerWidth,\r\n\t\t\t\t\twinHeight = window.innerHeight,\r\n\r\n\t\t\t\t\tscrollThisInstance = false;\r\n\r\n\t\t\t\t// Detect scrollEl\r\n\t\t\t\tif (scrollParentEl !== rootEl) {\r\n\t\t\t\t\t_clearAutoScrolls();\r\n\r\n\t\t\t\t\tscrollEl = options.scroll;\r\n\t\t\t\t\tscrollCustomFn = options.scrollFn;\r\n\r\n\t\t\t\t\tif (scrollEl === true) {\r\n\t\t\t\t\t\tscrollEl = _getParentAutoScrollElement(rootEl, true);\r\n\t\t\t\t\t\tscrollParentEl = scrollEl;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tvar layersOut = 0;\r\n\t\t\t\tvar currentParent = scrollEl;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvar\tel = currentParent,\r\n\t\t\t\t\t\trect = _getRect(el),\r\n\r\n\t\t\t\t\t\ttop = rect.top,\r\n\t\t\t\t\t\tbottom = rect.bottom,\r\n\t\t\t\t\t\tleft = rect.left,\r\n\t\t\t\t\t\tright = rect.right,\r\n\r\n\t\t\t\t\t\twidth = rect.width,\r\n\t\t\t\t\t\theight = rect.height,\r\n\r\n\t\t\t\t\t\tscrollWidth,\r\n\t\t\t\t\t\tscrollHeight,\r\n\r\n\t\t\t\t\t\tcss,\r\n\r\n\t\t\t\t\t\tvx,\r\n\t\t\t\t\t\tvy,\r\n\r\n\t\t\t\t\t\tcanScrollX,\r\n\t\t\t\t\t\tcanScrollY,\r\n\r\n\t\t\t\t\t\tscrollPosX,\r\n\t\t\t\t\t\tscrollPosY;\r\n\r\n\r\n\t\t\t\t\tif (el !== win) {\r\n\t\t\t\t\t\tscrollWidth = el.scrollWidth;\r\n\t\t\t\t\t\tscrollHeight = el.scrollHeight;\r\n\r\n\t\t\t\t\t\tcss = _css(el);\r\n\r\n\t\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll');\r\n\t\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll');\r\n\r\n\t\t\t\t\t\tscrollPosX = el.scrollLeft;\r\n\t\t\t\t\t\tscrollPosY = el.scrollTop;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tscrollWidth = document.documentElement.scrollWidth;\r\n\t\t\t\t\t\tscrollHeight = document.documentElement.scrollHeight;\r\n\r\n\t\t\t\t\t\tcss = _css(document.documentElement);\r\n\r\n\t\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll' || css.overflowX === 'visible');\r\n\t\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll' || css.overflowY === 'visible');\r\n\r\n\t\t\t\t\t\tscrollPosX = document.documentElement.scrollLeft;\r\n\t\t\t\t\t\tscrollPosY = document.documentElement.scrollTop;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvx = canScrollX && (abs(right - x) <= sens && (scrollPosX + width) < scrollWidth) - (abs(left - x) <= sens && !!scrollPosX);\r\n\r\n\t\t\t\t\tvy = canScrollY && (abs(bottom - y) <= sens && (scrollPosY + height) < scrollHeight) - (abs(top - y) <= sens && !!scrollPosY);\r\n\r\n\r\n\t\t\t\t\tif (!autoScrolls[layersOut]) {\r\n\t\t\t\t\t\tfor (var i = 0; i <= layersOut; i++) {\r\n\t\t\t\t\t\t\tif (!autoScrolls[i]) {\r\n\t\t\t\t\t\t\t\tautoScrolls[i] = {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\r\n\t\t\t\t\t\tautoScrolls[layersOut].el = el;\r\n\t\t\t\t\t\tautoScrolls[layersOut].vx = vx;\r\n\t\t\t\t\t\tautoScrolls[layersOut].vy = vy;\r\n\r\n\t\t\t\t\t\tclearInterval(autoScrolls[layersOut].pid);\r\n\r\n\t\t\t\t\t\tif (el && (vx != 0 || vy != 0)) {\r\n\t\t\t\t\t\t\tscrollThisInstance = true;\r\n\t\t\t\t\t\t\t/* jshint loopfunc:true */\r\n\t\t\t\t\t\t\tautoScrolls[layersOut].pid = setInterval((function () {\r\n\t\t\t\t\t\t\t\t// emulate drag over during autoscroll (fallback), emulating native DnD behaviour\r\n\t\t\t\t\t\t\t\tif (isFallback && this.layer === 0) {\r\n\t\t\t\t\t\t\t\t\tSortable.active._emulateDragOver(true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\r\n\t\t\t\t\t\t\t\tvar scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\r\n\r\n\t\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\r\n\t\t\t\t\t\t\t\t\tif (scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt, touchEvt, autoScrolls[this.layer].el) !== 'continue') {\r\n\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (autoScrolls[this.layer].el === win) {\r\n\t\t\t\t\t\t\t\t\twin.scrollTo(win.pageXOffset + scrollOffsetX, win.pageYOffset + scrollOffsetY);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tautoScrolls[this.layer].el.scrollTop += scrollOffsetY;\r\n\t\t\t\t\t\t\t\t\tautoScrolls[this.layer].el.scrollLeft += scrollOffsetX;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}).bind({layer: layersOut}), 24);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlayersOut++;\r\n\t\t\t\t} while (options.bubbleScroll && currentParent !== win && (currentParent = _getParentAutoScrollElement(currentParent, false)));\r\n\t\t\t\tscrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\r\n\t\t\t}\r\n\t\t}, 30),\r\n\r\n\t\t_clearAutoScrolls = function () {\r\n\t\t\tautoScrolls.forEach(function(autoScroll) {\r\n\t\t\t\tclearInterval(autoScroll.pid);\r\n\t\t\t});\r\n\t\t\tautoScrolls = [];\r\n\t\t},\r\n\r\n\t\t_prepareGroup = function (options) {\r\n\t\t\tfunction toFn(value, pull) {\r\n\t\t\t\treturn function(to, from, dragEl, evt) {\r\n\t\t\t\t\tvar ret;\r\n\t\t\t\t\tvar sameGroup = to.options.group.name &&\r\n\t\t\t\t\t\t\t\t\tfrom.options.group.name &&\r\n\t\t\t\t\t\t\t\t\tto.options.group.name === from.options.group.name;\r\n\r\n\t\t\t\t\tif (value == null && (pull || sameGroup)) {\r\n\t\t\t\t\t\t// Default pull value\r\n\t\t\t\t\t\t// Default pull and put value if same group\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else if (value == null || value === false) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else if (pull && value === 'clone') {\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t} else if (typeof value === 'function') {\r\n\t\t\t\t\t\treturn toFn(value(to, from, dragEl, evt));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar otherGroup = (pull ? to : from).options.group.name;\r\n\r\n\t\t\t\t\t\treturn (value === true ||\r\n\t\t\t\t\t\t(typeof value === 'string' && value === otherGroup) ||\r\n\t\t\t\t\t\t(value.join && value.indexOf(otherGroup) > -1));\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tvar group = {};\r\n\t\t\tvar originalGroup = options.group;\r\n\r\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\r\n\t\t\t\toriginalGroup = {name: originalGroup};\r\n\t\t\t}\r\n\r\n\t\t\tgroup.name = originalGroup.name;\r\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\r\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\r\n\t\t\tgroup.revertClone = originalGroup.revertClone;\r\n\r\n\t\t\toptions.group = group;\r\n\t\t},\r\n\r\n\t\t_checkAlignment = function(evt) {\r\n\t\t\tif (!dragEl || !dragEl.parentNode) return;\r\n\t\t\tdragEl.parentNode[expando] && dragEl.parentNode[expando]._computeIsAligned(evt);\r\n\t\t},\r\n\r\n\t\t_isTrueParentSortable = function(el, target) {\r\n\t\t\tvar trueParent = target;\r\n\t\t\twhile (!trueParent[expando]) {\r\n\t\t\t\ttrueParent = trueParent.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\treturn el === trueParent;\r\n\t\t},\r\n\r\n\t\t_artificalBubble = function(sortable, originalEvt, method) {\r\n\t\t\t// Artificial IE bubbling\r\n\t\t\tvar nextParent = sortable.parentNode;\r\n\t\t\twhile (nextParent && !nextParent[expando]) {\r\n\t\t\t\tnextParent = nextParent.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\tif (nextParent) {\r\n\t\t\t\tnextParent[expando][method](_extend(originalEvt, {\r\n\t\t\t\t\tartificialBubble: true\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_hideGhostForTarget = function() {\r\n\t\t\tif (!supportCssPointerEvents && ghostEl) {\r\n\t\t\t\t_css(ghostEl, 'display', 'none');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_unhideGhostForTarget = function() {\r\n\t\t\tif (!supportCssPointerEvents && ghostEl) {\r\n\t\t\t\t_css(ghostEl, 'display', '');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t// #1184 fix - Prevent click event on fallback if dragged but item not changed position\r\n\tdocument.addEventListener('click', function(evt) {\r\n\t\tif (ignoreNextClick) {\r\n\t\t\tevt.preventDefault();\r\n\t\t\tevt.stopPropagation && evt.stopPropagation();\r\n\t\t\tevt.stopImmediatePropagation && evt.stopImmediatePropagation();\r\n\t\t\tignoreNextClick = false;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}, true);\r\n\r\n\tvar nearestEmptyInsertDetectEvent = function(evt) {\r\n\t\tif (dragEl) {\r\n\t\t\tvar nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\r\n\r\n\t\t\tif (nearest) {\r\n\t\t\t\tnearest[expando]._onDragOver({\r\n\t\t\t\t\tclientX: evt.clientX,\r\n\t\t\t\t\tclientY: evt.clientY,\r\n\t\t\t\t\ttarget: nearest,\r\n\t\t\t\t\trootEl: nearest\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t// We do not want this to be triggered if completed (bubbling canceled), so only define it here\r\n\tdocument.addEventListener('dragover', nearestEmptyInsertDetectEvent);\r\n\tdocument.addEventListener('mousemove', nearestEmptyInsertDetectEvent);\r\n\r\n\t/**\r\n\t * @class  Sortable\r\n\t * @param  {HTMLElement}  el\r\n\t * @param  {Object}       [options]\r\n\t */\r\n\tfunction Sortable(el, options) {\r\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\r\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, not ' + {}.toString.call(el);\r\n\t\t}\r\n\r\n\t\tthis.el = el; // root element\r\n\t\tthis.options = options = _extend({}, options);\r\n\r\n\r\n\t\t// Export instance\r\n\t\tel[expando] = this;\r\n\r\n\t\t// Default options\r\n\t\tvar defaults = {\r\n\t\t\tgroup: null,\r\n\t\t\tsort: true,\r\n\t\t\tdisabled: false,\r\n\t\t\tstore: null,\r\n\t\t\thandle: null,\r\n\t\t\tscroll: true,\r\n\t\t\tscrollSensitivity: 30,\r\n\t\t\tscrollSpeed: 10,\r\n\t\t\tbubbleScroll: true,\r\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? 'li' : '>*',\r\n\t\t\tswapThreshold: 1, // percentage; 0 <= x <= 1\r\n\t\t\tinvertSwap: false, // invert always\r\n\t\t\tinvertedSwapThreshold: null, // will be set to same as swapThreshold if default\r\n\t\t\tremoveCloneOnHide: true,\r\n\t\t\tdirection: function() {\r\n\t\t\t\treturn _detectDirection(el, this.options);\r\n\t\t\t},\r\n\t\t\tghostClass: 'sortable-ghost',\r\n\t\t\tchosenClass: 'sortable-chosen',\r\n\t\t\tdragClass: 'sortable-drag',\r\n\t\t\tignore: 'a, img',\r\n\t\t\tfilter: null,\r\n\t\t\tpreventOnFilter: true,\r\n\t\t\tanimation: 0,\r\n\t\t\teasing: null,\r\n\t\t\tsetData: function (dataTransfer, dragEl) {\r\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\r\n\t\t\t},\r\n\t\t\tdropBubble: false,\r\n\t\t\tdragoverBubble: false,\r\n\t\t\tdataIdAttr: 'data-id',\r\n\t\t\tdelay: 0,\r\n\t\t\ttouchStartThreshold: parseInt(window.devicePixelRatio, 10) || 1,\r\n\t\t\tforceFallback: false,\r\n\t\t\tfallbackClass: 'sortable-fallback',\r\n\t\t\tfallbackOnBody: false,\r\n\t\t\tfallbackTolerance: 0,\r\n\t\t\tfallbackOffset: {x: 0, y: 0},\r\n\t\t\tsupportPointer: Sortable.supportPointer !== false && (\r\n\t\t\t\t('PointerEvent' in window) ||\r\n\t\t\t\twindow.navigator && ('msPointerEnabled' in window.navigator) // microsoft\r\n\t\t\t),\r\n\t\t\temptyInsertThreshold: 5\r\n\t\t};\r\n\r\n\r\n\t\t// Set default options\r\n\t\tfor (var name in defaults) {\r\n\t\t\t!(name in options) && (options[name] = defaults[name]);\r\n\t\t}\r\n\r\n\t\t_prepareGroup(options);\r\n\r\n\t\t// Bind all private methods\r\n\t\tfor (var fn in this) {\r\n\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\r\n\t\t\t\tthis[fn] = this[fn].bind(this);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Setup drag mode\r\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\r\n\r\n\t\t// Bind events\r\n\t\tif (options.supportPointer) {\r\n\t\t\t_on(el, 'pointerdown', this._onTapStart);\r\n\t\t} else {\r\n\t\t\t_on(el, 'mousedown', this._onTapStart);\r\n\t\t\t_on(el, 'touchstart', this._onTapStart);\r\n\t\t}\r\n\r\n\t\tif (this.nativeDraggable) {\r\n\t\t\t_on(el, 'dragover', this);\r\n\t\t\t_on(el, 'dragenter', this);\r\n\t\t}\r\n\r\n\t\tsortables.push(this.el);\r\n\r\n\t\t// Restore sorting\r\n\t\toptions.store && options.store.get && this.sort(options.store.get(this) || []);\r\n\t}\r\n\r\n\tSortable.prototype = /** @lends Sortable.prototype */ {\r\n\t\tconstructor: Sortable,\r\n\r\n\t\t_computeIsAligned: function(evt) {\r\n\t\t\tvar target;\r\n\r\n\t\t\tif (ghostEl && !supportCssPointerEvents) {\r\n\t\t\t\t_hideGhostForTarget();\r\n\t\t\t\ttarget = document.elementFromPoint(evt.clientX, evt.clientY);\r\n\t\t\t\t_unhideGhostForTarget();\r\n\t\t\t} else {\r\n\t\t\t\ttarget = evt.target;\r\n\t\t\t}\r\n\r\n\t\t\ttarget = _closest(target, this.options.draggable, this.el, false);\r\n\t\t\tif (_alignedSilent) return;\r\n\t\t\tif (!dragEl || dragEl.parentNode !== this.el) return;\r\n\r\n\t\t\tvar children = this.el.children;\r\n\t\t\tfor (var i = 0; i < children.length; i++) {\r\n\t\t\t\t// Don't change for target in case it is changed to aligned before onDragOver is fired\r\n\t\t\t\tif (_closest(children[i], this.options.draggable, this.el, false) && children[i] !== target) {\r\n\t\t\t\t\tchildren[i].sortableMouseAligned = _isClientInRowColumn(evt.clientX, evt.clientY, children[i], this._getDirection(evt, null), this.options);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Used for nulling last target when not in element, nothing to do with checking if aligned\r\n\t\t\tif (!_closest(target, this.options.draggable, this.el, true)) {\r\n\t\t\t\tlastTarget = null;\r\n\t\t\t}\r\n\r\n\t\t\t_alignedSilent = true;\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\t_alignedSilent = false;\r\n\t\t\t}, 30);\r\n\r\n\t\t},\r\n\r\n\t\t_getDirection: function(evt, target) {\r\n\t\t\treturn (typeof this.options.direction === 'function') ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\r\n\t\t},\r\n\r\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\r\n\t\t\tif (!evt.cancelable) return;\r\n\r\n\t\t\tvar _this = this,\r\n\t\t\t\tel = this.el,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\tpreventOnFilter = options.preventOnFilter,\r\n\t\t\t\ttype = evt.type,\r\n\t\t\t\ttouch = evt.touches && evt.touches[0],\r\n\t\t\t\ttarget = (touch || evt).target,\r\n\t\t\t\toriginalTarget = evt.target.shadowRoot && ((evt.path && evt.path[0]) || (evt.composedPath && evt.composedPath()[0])) || target,\r\n\t\t\t\tfilter = options.filter,\r\n\t\t\t\tstartIndex;\r\n\r\n\t\t\t_saveInputCheckedState(el);\r\n\r\n\r\n\t\t\t// IE: Calls events in capture mode if event element is nested. This ensures only correct element's _onTapStart goes through.\r\n\t\t\t// This process is also done in _onDragOver\r\n\t\t\tif (IE11OrLess && !evt.artificialBubble && !_isTrueParentSortable(el, target)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\r\n\t\t\tif (dragEl) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\r\n\t\t\t\treturn; // only left button and enabled\r\n\t\t\t}\r\n\r\n\t\t\t// cancel dnd if original target is content editable\r\n\t\t\tif (originalTarget.isContentEditable) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\ttarget = _closest(target, options.draggable, el, false);\r\n\r\n\t\t\tif (!target) {\r\n\t\t\t\tif (IE11OrLess) {\r\n\t\t\t\t\t_artificalBubble(el, evt, '_onTapStart');\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (lastDownEl === target) {\r\n\t\t\t\t// Ignoring duplicate `down`\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Get the index of the dragged element within its parent\r\n\t\t\tstartIndex = _index(target, options.draggable);\r\n\r\n\t\t\t// Check filter\r\n\t\t\tif (typeof filter === 'function') {\r\n\t\t\t\tif (filter.call(this, evt, target, this)) {\r\n\t\t\t\t\t_dispatchEvent(_this, originalTarget, 'filter', target, el, el, startIndex);\r\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\r\n\t\t\t\t\treturn; // cancel dnd\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (filter) {\r\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\r\n\t\t\t\t\tcriteria = _closest(originalTarget, criteria.trim(), el, false);\r\n\r\n\t\t\t\t\tif (criteria) {\r\n\t\t\t\t\t\t_dispatchEvent(_this, criteria, 'filter', target, el, el, startIndex);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (filter) {\r\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\r\n\t\t\t\t\treturn; // cancel dnd\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (options.handle && !_closest(originalTarget, options.handle, el, false)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Prepare `dragstart`\r\n\t\t\tthis._prepareDragStart(evt, touch, target, startIndex);\r\n\t\t},\r\n\r\n\r\n\t\t_handleAutoScroll: function(evt, fallback) {\r\n\t\t\tif (!dragEl || !this.options.scroll) return;\r\n\t\t\tvar x = evt.clientX,\r\n\t\t\t\ty = evt.clientY,\r\n\r\n\t\t\t\telem = document.elementFromPoint(x, y),\r\n\t\t\t\t_this = this;\r\n\r\n\t\t\t// IE does not seem to have native autoscroll,\r\n\t\t\t// Edge's autoscroll seems too conditional,\r\n\t\t\t// Firefox and Chrome are good\r\n\t\t\tif (fallback || Edge || IE11OrLess) {\r\n\t\t\t\t_autoScroll(evt, _this.options, elem, fallback);\r\n\r\n\t\t\t\t// Listener for pointer element change\r\n\t\t\t\tvar ogElemScroller = _getParentAutoScrollElement(elem, true);\r\n\t\t\t\tif (\r\n\t\t\t\t\tscrolling &&\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t!pointerElemChangedInterval ||\r\n\t\t\t\t\t\tx !== lastPointerElemX ||\r\n\t\t\t\t\t\ty !== lastPointerElemY\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\r\n\t\t\t\t\tpointerElemChangedInterval && clearInterval(pointerElemChangedInterval);\r\n\t\t\t\t\t// Detect for pointer elem change, emulating native DnD behaviour\r\n\t\t\t\t\tpointerElemChangedInterval = setInterval(function() {\r\n\t\t\t\t\t\tif (!dragEl) return;\r\n\t\t\t\t\t\t// could also check if scroll direction on newElem changes due to parent autoscrolling\r\n\t\t\t\t\t\tvar newElem = _getParentAutoScrollElement(document.elementFromPoint(x, y), true);\r\n\t\t\t\t\t\tif (newElem !== ogElemScroller) {\r\n\t\t\t\t\t\t\togElemScroller = newElem;\r\n\t\t\t\t\t\t\t_clearAutoScrolls();\r\n\t\t\t\t\t\t\t_autoScroll(evt, _this.options, ogElemScroller, fallback);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 10);\r\n\t\t\t\t\tlastPointerElemX = x;\r\n\t\t\t\t\tlastPointerElemY = y;\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\r\n\t\t\t\tif (!_this.options.bubbleScroll || _getParentAutoScrollElement(elem, true) === window) {\r\n\t\t\t\t\t_clearAutoScrolls();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t_autoScroll(evt, _this.options, _getParentAutoScrollElement(elem, false), false);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex) {\r\n\t\t\tvar _this = this,\r\n\t\t\t\tel = _this.el,\r\n\t\t\t\toptions = _this.options,\r\n\t\t\t\townerDocument = el.ownerDocument,\r\n\t\t\t\tdragStartFn;\r\n\r\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\r\n\t\t\t\trootEl = el;\r\n\t\t\t\tdragEl = target;\r\n\t\t\t\tparentEl = dragEl.parentNode;\r\n\t\t\t\tnextEl = dragEl.nextSibling;\r\n\t\t\t\tlastDownEl = target;\r\n\t\t\t\tactiveGroup = options.group;\r\n\t\t\t\toldIndex = startIndex;\r\n\r\n\t\t\t\ttapEvt = {\r\n\t\t\t\t\ttarget: dragEl,\r\n\t\t\t\t\tclientX: (touch || evt).clientX,\r\n\t\t\t\t\tclientY: (touch || evt).clientY\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis._lastX = (touch || evt).clientX;\r\n\t\t\t\tthis._lastY = (touch || evt).clientY;\r\n\r\n\t\t\t\tdragEl.style['will-change'] = 'all';\r\n\t\t\t\t// undo animation if needed\r\n\t\t\t\tdragEl.style.transition = '';\r\n\t\t\t\tdragEl.style.transform = '';\r\n\r\n\t\t\t\tdragStartFn = function () {\r\n\t\t\t\t\t// Delayed drag has been triggered\r\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\r\n\t\t\t\t\t_this._disableDelayedDrag();\r\n\r\n\t\t\t\t\t// Make the element draggable\r\n\t\t\t\t\tdragEl.draggable = _this.nativeDraggable;\r\n\r\n\t\t\t\t\t// Bind the events: dragstart/dragend\r\n\t\t\t\t\t_this._triggerDragStart(evt, touch);\r\n\r\n\t\t\t\t\t// Drag start event\r\n\t\t\t\t\t_dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, rootEl, oldIndex);\r\n\r\n\t\t\t\t\t// Chosen item\r\n\t\t\t\t\t_toggleClass(dragEl, options.chosenClass, true);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Disable \"draggable\"\r\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\r\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (options.supportPointer) {\r\n\t\t\t\t\t_on(ownerDocument, 'pointerup', _this._onDrop);\r\n\t\t\t\t\t_on(ownerDocument, 'pointercancel', _this._onDrop);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_on(ownerDocument, 'mouseup', _this._onDrop);\r\n\t\t\t\t\t_on(ownerDocument, 'touchend', _this._onDrop);\r\n\t\t\t\t\t_on(ownerDocument, 'touchcancel', _this._onDrop);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (options.delay) {\r\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\r\n\t\t\t\t\t// before the delay has been reached:\r\n\t\t\t\t\t// disable the delayed drag\r\n\t\t\t\t\t_on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\r\n\t\t\t\t\t_on(ownerDocument, 'touchend', _this._disableDelayedDrag);\r\n\t\t\t\t\t_on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\r\n\t\t\t\t\t_on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\r\n\t\t\t\t\t_on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\r\n\t\t\t\t\toptions.supportPointer && _on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\r\n\r\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdragStartFn();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_delayedDragTouchMoveHandler: function (/** TouchEvent|PointerEvent **/e) {\r\n\t\t\tvar touch = e.touches ? e.touches[0] : e;\r\n\t\t\tif (min(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY))\r\n\t\t\t\t\t>= this.options.touchStartThreshold\r\n\t\t\t) {\r\n\t\t\t\tthis._disableDelayedDrag();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_disableDelayedDrag: function () {\r\n\t\t\tvar ownerDocument = this.el.ownerDocument;\r\n\r\n\t\t\tclearTimeout(this._dragStartTimer);\r\n\t\t\t_off(ownerDocument, 'mouseup', this._disableDelayedDrag);\r\n\t\t\t_off(ownerDocument, 'touchend', this._disableDelayedDrag);\r\n\t\t\t_off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\r\n\t\t\t_off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\r\n\t\t\t_off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\r\n\t\t\t_off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\r\n\t\t},\r\n\r\n\t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\r\n\t\t\ttouch = touch || (evt.pointerType == 'touch' ? evt : null);\r\n\r\n\t\t\tif (!this.nativeDraggable || touch) {\r\n\t\t\t\tif (this.options.supportPointer) {\r\n\t\t\t\t\ttouch && _on(document, 'touchmove', _preventScroll); // must be touchmove to prevent scroll\r\n\t\t\t\t\t_on(document, 'pointermove', this._onTouchMove);\r\n\t\t\t\t} else if (touch) {\r\n\t\t\t\t\t_on(document, 'touchmove', _preventScroll);\r\n\t\t\t\t\t_on(document, 'touchmove', this._onTouchMove);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_on(document, 'mousemove', this._onTouchMove);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t_on(dragEl, 'dragend', this);\r\n\t\t\t\t_on(rootEl, 'dragstart', this._onDragStart);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (document.selection) {\r\n\t\t\t\t\t// Timeout neccessary for IE9\r\n\t\t\t\t\t_nextTick(function () {\r\n\t\t\t\t\t\tdocument.selection.empty();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_dragStarted: function (fallback) {\r\n\t\t\tawaitingDragStarted = false;\r\n\t\t\tif (rootEl && dragEl) {\r\n\t\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\t\t_on(document, 'dragover', this._handleAutoScroll);\r\n\t\t\t\t\t_on(document, 'dragover', _checkAlignment);\r\n\t\t\t\t}\r\n\t\t\t\tvar options = this.options;\r\n\r\n\t\t\t\t// Apply effect\r\n\t\t\t\t!fallback && _toggleClass(dragEl, options.dragClass, false);\r\n\t\t\t\t_toggleClass(dragEl, options.ghostClass, true);\r\n\r\n\t\t\t\t// In case dragging an animated element\r\n\t\t\t\t_css(dragEl, 'transform', '');\r\n\r\n\t\t\t\tSortable.active = this;\r\n\r\n\t\t\t\tfallback && this._appendGhost();\r\n\r\n\t\t\t\t// Drag start event\r\n\t\t\t\t_dispatchEvent(this, rootEl, 'start', dragEl, rootEl, rootEl, oldIndex);\r\n\t\t\t} else {\r\n\t\t\t\tthis._nulling();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_emulateDragOver: function (bypassLastTouchCheck) {\r\n\t\t\tif (touchEvt) {\r\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY && !bypassLastTouchCheck) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis._lastX = touchEvt.clientX;\r\n\t\t\t\tthis._lastY = touchEvt.clientY;\r\n\r\n\t\t\t\t_hideGhostForTarget();\r\n\r\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\r\n\t\t\t\tvar parent = target;\r\n\r\n\t\t\t\twhile (target && target.shadowRoot) {\r\n\t\t\t\t\ttarget = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\r\n\t\t\t\t\tparent = target;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tif (parent[expando]) {\r\n\t\t\t\t\t\t\tvar inserted;\r\n\r\n\t\t\t\t\t\t\tinserted = parent[expando]._onDragOver({\r\n\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\r\n\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\r\n\t\t\t\t\t\t\t\ttarget: target,\r\n\t\t\t\t\t\t\t\trootEl: parent\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif (inserted && !this.options.dragoverBubble) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttarget = parent; // store last element\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/* jshint boss:true */\r\n\t\t\t\t\twhile (parent = parent.parentNode);\r\n\t\t\t\t}\r\n\t\t\t\tdragEl.parentNode[expando]._computeIsAligned(touchEvt);\r\n\r\n\t\t\t\t_unhideGhostForTarget();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t_onTouchMove: function (/**TouchEvent*/evt) {\r\n\t\t\tif (tapEvt) {\r\n\t\t\t\tif (!evt.cancelable) return;\r\n\t\t\t\tvar\toptions = this.options,\r\n\t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\r\n\t\t\t\t\tfallbackOffset = options.fallbackOffset,\r\n\t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\r\n\t\t\t\t\tmatrix = ghostEl && _matrix(ghostEl),\r\n\t\t\t\t\tscaleX = ghostEl && matrix && matrix.a,\r\n\t\t\t\t\tscaleY = ghostEl && matrix && matrix.d,\r\n\t\t\t\t\tdx = ((touch.clientX - tapEvt.clientX) + fallbackOffset.x) / (scaleX ? scaleX : 1),\r\n\t\t\t\t\tdy = ((touch.clientY - tapEvt.clientY) + fallbackOffset.y) / (scaleY ? scaleY : 1),\r\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\r\n\r\n\r\n\t\t\t\t// only set the status to dragging, when we are actually dragging\r\n\t\t\t\tif (!Sortable.active && !awaitingDragStarted) {\r\n\t\t\t\t\tif (fallbackTolerance &&\r\n\t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._onDragStart(evt, true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._handleAutoScroll(touch, true);\r\n\r\n\r\n\t\t\t\tmoved = true;\r\n\t\t\t\ttouchEvt = touch;\r\n\r\n\r\n\t\t\t\t_css(ghostEl, 'webkitTransform', translate3d);\r\n\t\t\t\t_css(ghostEl, 'mozTransform', translate3d);\r\n\t\t\t\t_css(ghostEl, 'msTransform', translate3d);\r\n\t\t\t\t_css(ghostEl, 'transform', translate3d);\r\n\r\n\t\t\t\tevt.cancelable && evt.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_appendGhost: function () {\r\n\t\t\tif (!ghostEl) {\r\n\t\t\t\tvar rect = _getRect(dragEl, this.options.fallbackOnBody ? document.body : rootEl, true),\r\n\t\t\t\t\tcss = _css(dragEl),\r\n\t\t\t\t\toptions = this.options;\r\n\r\n\t\t\t\tghostEl = dragEl.cloneNode(true);\r\n\r\n\t\t\t\t_toggleClass(ghostEl, options.ghostClass, false);\r\n\t\t\t\t_toggleClass(ghostEl, options.fallbackClass, true);\r\n\t\t\t\t_toggleClass(ghostEl, options.dragClass, true);\r\n\r\n\t\t\t\t_css(ghostEl, 'box-sizing', 'border-box');\r\n\t\t\t\t_css(ghostEl, 'margin', 0);\r\n\t\t\t\t_css(ghostEl, 'top', rect.top);\r\n\t\t\t\t_css(ghostEl, 'left', rect.left);\r\n\t\t\t\t_css(ghostEl, 'width', rect.width);\r\n\t\t\t\t_css(ghostEl, 'height', rect.height);\r\n\t\t\t\t_css(ghostEl, 'opacity', '0.8');\r\n\t\t\t\t_css(ghostEl, 'position', 'fixed');\r\n\t\t\t\t_css(ghostEl, 'zIndex', '100000');\r\n\t\t\t\t_css(ghostEl, 'pointerEvents', 'none');\r\n\r\n\t\t\t\toptions.fallbackOnBody && document.body.appendChild(ghostEl) || rootEl.appendChild(ghostEl);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/fallback) {\r\n\t\t\tvar _this = this;\r\n\t\t\tvar dataTransfer = evt.dataTransfer;\r\n\t\t\tvar options = _this.options;\r\n\r\n\t\t\t// Setup clone\r\n\t\t\tcloneEl = _clone(dragEl);\r\n\r\n\t\t\tcloneEl.draggable = false;\r\n\t\t\tcloneEl.style['will-change'] = '';\r\n\r\n\t\t\tthis._hideClone();\r\n\r\n\t\t\t_toggleClass(cloneEl, _this.options.chosenClass, false);\r\n\r\n\r\n\t\t\t// #1143: IFrame support workaround\r\n\t\t\t_this._cloneId = _nextTick(function () {\r\n\t\t\t\tif (!_this.options.removeCloneOnHide) {\r\n\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\r\n\t\t\t\t}\r\n\t\t\t\t_dispatchEvent(_this, rootEl, 'clone', dragEl);\r\n\t\t\t});\r\n\r\n\r\n\t\t\t!fallback && _toggleClass(dragEl, options.dragClass, true);\r\n\r\n\t\t\t// Set proper drop events\r\n\t\t\tif (fallback) {\r\n\t\t\t\tignoreNextClick = true;\r\n\t\t\t\t_this._loopId = setInterval(_this._emulateDragOver, 50);\r\n\t\t\t} else {\r\n\t\t\t\t// Undo what was set in _prepareDragStart before drag started\r\n\t\t\t\t_off(document, 'mouseup', _this._onDrop);\r\n\t\t\t\t_off(document, 'touchend', _this._onDrop);\r\n\t\t\t\t_off(document, 'touchcancel', _this._onDrop);\r\n\t\t\t\t_off(document, 'pointercancel', _this._onDrop);\r\n\r\n\t\t\t\tif (dataTransfer) {\r\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\r\n\t\t\t\t\toptions.setData && options.setData.call(_this, dataTransfer, dragEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_on(document, 'drop', _this);\r\n\r\n\t\t\t\t// #1276 fix:\r\n\t\t\t\t_css(dragEl, 'transform', 'translateZ(0)');\r\n\t\t\t}\r\n\r\n\t\t\tawaitingDragStarted = true;\r\n\r\n\t\t\t_this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback));\r\n\t\t\t_on(document, 'selectstart', _this);\r\n\t\t},\r\n\r\n\t\t// Returns true - if no further action is needed (either inserted or another condition)\r\n\t\t_onDragOver: function (/**Event*/evt) {\r\n\t\t\tvar el = this.el,\r\n\t\t\t\ttarget = evt.target,\r\n\t\t\t\tdragRect,\r\n\t\t\t\ttargetRect,\r\n\t\t\t\trevert,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\tgroup = options.group,\r\n\t\t\t\tactiveSortable = Sortable.active,\r\n\t\t\t\tisOwner = (activeGroup === group),\r\n\t\t\t\tcanSort = options.sort,\r\n\t\t\t\t_this = this;\r\n\r\n\t\t\tif (_silent) return;\r\n\r\n\t\t\t// IE event order fix\r\n\t\t\tif (IE11OrLess && !evt.rootEl && !evt.artificialBubble && !_isTrueParentSortable(el, target)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Return invocation when no further action is needed in another sortable\r\n\t\t\tfunction completed() {\r\n\t\t\t\tif (activeSortable) {\r\n\t\t\t\t\t// Set ghost class to new sortable's ghost class\r\n\t\t\t\t\t_toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\r\n\t\t\t\t\t_toggleClass(dragEl, options.ghostClass, true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (putSortable !== _this && _this !== Sortable.active) {\r\n\t\t\t\t\tputSortable = _this;\r\n\t\t\t\t} else if (_this === Sortable.active) {\r\n\t\t\t\t\tputSortable = null;\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// Null lastTarget if it is not inside a previously swapped element\r\n\t\t\t\tif ((target === dragEl && !dragEl.animated) || (target === el && !target.animated)) {\r\n\t\t\t\t\tlastTarget = null;\r\n\t\t\t\t}\r\n\t\t\t\t// no bubbling and not fallback\r\n\t\t\t\tif (!options.dragoverBubble && !evt.rootEl && target !== document) {\r\n\t\t\t\t\t_this._handleAutoScroll(evt);\r\n\t\t\t\t\tdragEl.parentNode[expando]._computeIsAligned(evt);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Call when dragEl has been inserted\r\n\t\t\tfunction changed() {\r\n\t\t\t\t_dispatchEvent(_this, rootEl, 'change', target, el, rootEl, oldIndex, _index(dragEl, options.draggable), evt);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (evt.preventDefault !== void 0) {\r\n\t\t\t\tevt.cancelable && evt.preventDefault();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tmoved = true;\r\n\r\n\t\t\ttarget = _closest(target, options.draggable, el, true);\r\n\r\n\t\t\t// target is dragEl or target is animated\r\n\t\t\tif (!!_closest(evt.target, null, dragEl, true) || target.animated) {\r\n\t\t\t\treturn completed();\r\n\t\t\t}\r\n\r\n\t\t\tif (target !== dragEl) {\r\n\t\t\t\tignoreNextClick = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (activeSortable && !options.disabled &&\r\n\t\t\t\t(isOwner\r\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\tputSortable === this ||\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t(this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\r\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\tvar axis = this._getDirection(evt, target);\r\n\r\n\t\t\t\tdragRect = _getRect(dragEl);\r\n\r\n\t\t\t\tif (revert) {\r\n\t\t\t\t\tthis._hideClone();\r\n\t\t\t\t\tparentEl = rootEl; // actualization\r\n\r\n\t\t\t\t\tif (nextEl) {\r\n\t\t\t\t\t\trootEl.insertBefore(dragEl, nextEl);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trootEl.appendChild(dragEl);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn completed();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ((el.children.length === 0) || (el.children[0] === ghostEl) ||\r\n\t\t\t\t\t_ghostIsLast(evt, axis, el) && !dragEl.animated\r\n\t\t\t\t) {\r\n\t\t\t\t\t//assign target only if condition is true\r\n\t\t\t\t\tif (el.children.length !== 0 && el.children[0] !== ghostEl && el === evt.target) {\r\n\t\t\t\t\t\ttarget = _lastChild(el);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (target) {\r\n\t\t\t\t\t\ttargetRect = _getRect(target);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\tactiveSortable._hideClone();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tactiveSortable._showClone(this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\r\n\t\t\t\t\t\tel.appendChild(dragEl);\r\n\t\t\t\t\t\tparentEl = el; // actualization\r\n\t\t\t\t\t\trealDragElRect = null;\r\n\r\n\t\t\t\t\t\tchanged();\r\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\r\n\t\t\t\t\t\ttarget && this._animate(targetRect, target);\r\n\t\t\t\t\t\treturn completed();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (target && target !== dragEl && (target.parentNode[expando] !== void 0) && target !== el) {\r\n\t\t\t\t\tvar direction = 0,\r\n\t\t\t\t\t\ttargetBeforeFirstSwap,\r\n\t\t\t\t\t\taligned = target.sortableMouseAligned,\r\n\t\t\t\t\t\tdifferentLevel = dragEl.parentNode !== el,\r\n\t\t\t\t\t\tscrolledPastTop = _isScrolledPast(target, axis === 'vertical' ? 'top' : 'left');\r\n\r\n\t\t\t\t\tif (lastTarget !== target) {\r\n\t\t\t\t\t\tlastMode = null;\r\n\t\t\t\t\t\ttargetBeforeFirstSwap = _getRect(target)[axis === 'vertical' ? 'top' : 'left'];\r\n\t\t\t\t\t\tpastFirstInvertThresh = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Reference: https://www.lucidchart.com/documents/view/10fa0e93-e362-4126-aca2-b709ee56bd8b/0\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t_isElInRowColumn(dragEl, target, axis) && aligned ||\r\n\t\t\t\t\t\tdifferentLevel ||\r\n\t\t\t\t\t\tscrolledPastTop ||\r\n\t\t\t\t\t\toptions.invertSwap ||\r\n\t\t\t\t\t\tlastMode === 'insert' ||\r\n\t\t\t\t\t\t// Needed, in the case that we are inside target and inserted because not aligned... aligned will stay false while inside\r\n\t\t\t\t\t\t// and lastMode will change to 'insert', but we must swap\r\n\t\t\t\t\t\tlastMode === 'swap'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t// New target that we will be inside\r\n\t\t\t\t\t\tif (lastMode !== 'swap') {\r\n\t\t\t\t\t\t\tisCircumstantialInvert = options.invertSwap || differentLevel || scrolling || scrolledPastTop;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdirection = _getSwapDirection(evt, target, axis,\r\n\t\t\t\t\t\t\toptions.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold,\r\n\t\t\t\t\t\t\tisCircumstantialInvert,\r\n\t\t\t\t\t\t\tlastTarget === target);\r\n\t\t\t\t\t\tlastMode = 'swap';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Insert at position\r\n\t\t\t\t\t\tdirection = _getInsertDirection(target, options);\r\n\t\t\t\t\t\tlastMode = 'insert';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (direction === 0) return completed();\r\n\r\n\t\t\t\t\trealDragElRect = null;\r\n\t\t\t\t\tlastTarget = target;\r\n\r\n\t\t\t\t\tlastDirection = direction;\r\n\r\n\t\t\t\t\ttargetRect = _getRect(target);\r\n\r\n\t\t\t\t\tvar nextSibling = target.nextElementSibling,\r\n\t\t\t\t\t\tafter = false;\r\n\r\n\t\t\t\t\tafter = direction === 1;\r\n\r\n\t\t\t\t\tvar moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\r\n\r\n\t\t\t\t\tif (moveVector !== false) {\r\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\r\n\t\t\t\t\t\t\tafter = (moveVector === 1);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_silent = true;\r\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\r\n\r\n\t\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\t\tactiveSortable._hideClone();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tactiveSortable._showClone(this);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (after && !nextSibling) {\r\n\t\t\t\t\t\t\tel.appendChild(dragEl);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\r\n\r\n\t\t\t\t\t\t// must be done before animation\r\n\t\t\t\t\t\tif (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\r\n\t\t\t\t\t\t\ttargetMoveDistance = abs(targetBeforeFirstSwap - _getRect(target)[axis === 'vertical' ? 'top' : 'left']);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tchanged();\r\n\t\t\t\t\t\t!differentLevel && this._animate(targetRect, target);\r\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\r\n\r\n\t\t\t\t\t\treturn completed();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (el.contains(dragEl)) {\r\n\t\t\t\t\treturn completed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (IE11OrLess && !evt.rootEl) {\r\n\t\t\t\t_artificalBubble(el, evt, '_onDragOver');\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t_animate: function (prevRect, target) {\r\n\t\t\tvar ms = this.options.animation;\r\n\r\n\t\t\tif (ms) {\r\n\t\t\t\tvar currentRect = _getRect(target);\r\n\r\n\t\t\t\tif (target === dragEl) {\r\n\t\t\t\t\trealDragElRect = currentRect;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (prevRect.nodeType === 1) {\r\n\t\t\t\t\tprevRect = _getRect(prevRect);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if actually moving position\r\n\t\t\t\tif ((prevRect.left + prevRect.width / 2) !== (currentRect.left + currentRect.width / 2)\r\n\t\t\t\t\t|| (prevRect.top + prevRect.height / 2) !== (currentRect.top + currentRect.height / 2)\r\n\t\t\t\t) {\r\n\t\t\t\t\tvar matrix = _matrix(this.el),\r\n\t\t\t\t\t\tscaleX = matrix && matrix.a,\r\n\t\t\t\t\t\tscaleY = matrix && matrix.d;\r\n\r\n\t\t\t\t\t_css(target, 'transition', 'none');\r\n\t\t\t\t\t_css(target, 'transform', 'translate3d('\r\n\t\t\t\t\t\t+ (prevRect.left - currentRect.left) / (scaleX ? scaleX : 1) + 'px,'\r\n\t\t\t\t\t\t+ (prevRect.top - currentRect.top) / (scaleY ? scaleY : 1) + 'px,0)'\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tforRepaintDummy = target.offsetWidth; // repaint\r\n\t\t\t\t\t_css(target, 'transition', 'transform ' + ms + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\r\n\t\t\t\t\t_css(target, 'transform', 'translate3d(0,0,0)');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t(typeof target.animated === 'number') && clearTimeout(target.animated);\r\n\t\t\t\ttarget.animated = setTimeout(function () {\r\n\t\t\t\t\t_css(target, 'transition', '');\r\n\t\t\t\t\t_css(target, 'transform', '');\r\n\t\t\t\t\ttarget.animated = false;\r\n\t\t\t\t}, ms);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_offUpEvents: function () {\r\n\t\t\tvar ownerDocument = this.el.ownerDocument;\r\n\r\n\t\t\t_off(document, 'touchmove', _preventScroll);\r\n\t\t\t_off(document, 'pointermove', _preventScroll);\r\n\t\t\t_off(document, 'touchmove', this._onTouchMove);\r\n\t\t\t_off(document, 'pointermove', this._onTouchMove);\r\n\t\t\t_off(ownerDocument, 'mouseup', this._onDrop);\r\n\t\t\t_off(ownerDocument, 'touchend', this._onDrop);\r\n\t\t\t_off(ownerDocument, 'pointerup', this._onDrop);\r\n\t\t\t_off(ownerDocument, 'touchcancel', this._onDrop);\r\n\t\t\t_off(ownerDocument, 'pointercancel', this._onDrop);\r\n\t\t\t_off(document, 'selectstart', this);\r\n\t\t},\r\n\r\n\t\t_onDrop: function (/**Event*/evt) {\r\n\t\t\tvar el = this.el,\r\n\t\t\t\toptions = this.options;\r\n\r\n\t\t\tawaitingDragStarted = false;\r\n\t\t\tscrolling = false;\r\n\t\t\tisCircumstantialInvert = false;\r\n\t\t\tpastFirstInvertThresh = false;\r\n\r\n\t\t\tclearInterval(this._loopId);\r\n\r\n\t\t\tclearInterval(pointerElemChangedInterval);\r\n\t\t\t_clearAutoScrolls();\r\n\t\t\t_cancelThrottle();\r\n\r\n\t\t\tclearTimeout(this._dragStartTimer);\r\n\r\n\t\t\t_cancelNextTick(this._cloneId);\r\n\t\t\t_cancelNextTick(this._dragStartId);\r\n\r\n\t\t\t// Unbind events\r\n\t\t\t_off(document, 'mousemove', this._onTouchMove);\r\n\r\n\r\n\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\t_off(document, 'drop', this);\r\n\t\t\t\t_off(el, 'dragstart', this._onDragStart);\r\n\t\t\t\t_off(document, 'dragover', this._handleAutoScroll);\r\n\t\t\t\t_off(document, 'dragover', _checkAlignment);\r\n\t\t\t}\r\n\r\n\t\t\tthis._offUpEvents();\r\n\r\n\t\t\tif (evt) {\r\n\t\t\t\tif (moved) {\r\n\t\t\t\t\tevt.cancelable && evt.preventDefault();\r\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\r\n\r\n\t\t\t\tif (rootEl === parentEl || (putSortable && putSortable.lastPutMode !== 'clone')) {\r\n\t\t\t\t\t// Remove clone\r\n\t\t\t\t\tcloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dragEl) {\r\n\t\t\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\t\t\t_off(dragEl, 'dragend', this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_disableDraggable(dragEl);\r\n\t\t\t\t\tdragEl.style['will-change'] = '';\r\n\r\n\t\t\t\t\t// Remove class's\r\n\t\t\t\t\t_toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\r\n\t\t\t\t\t_toggleClass(dragEl, this.options.chosenClass, false);\r\n\r\n\t\t\t\t\t// Drag stop event\r\n\t\t\t\t\t_dispatchEvent(this, rootEl, 'unchoose', dragEl, parentEl, rootEl, oldIndex, null, evt);\r\n\r\n\t\t\t\t\tif (rootEl !== parentEl) {\r\n\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\r\n\r\n\t\t\t\t\t\tif (newIndex >= 0) {\r\n\t\t\t\t\t\t\t// Add event\r\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'add', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\r\n\r\n\t\t\t\t\t\t\t// Remove event\r\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'remove', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\r\n\r\n\t\t\t\t\t\t\t// drag from one list and drop into another\r\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\r\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tputSortable && putSortable.save();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\r\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\r\n\t\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\r\n\r\n\t\t\t\t\t\t\tif (newIndex >= 0) {\r\n\t\t\t\t\t\t\t\t// drag & drop within the same list\r\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'update', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\r\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (Sortable.active) {\r\n\t\t\t\t\t\t/* jshint eqnull:true */\r\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\r\n\t\t\t\t\t\t\tnewIndex = oldIndex;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'end', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\r\n\r\n\t\t\t\t\t\t// Save sorting\r\n\t\t\t\t\t\tthis.save();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tthis._nulling();\r\n\t\t},\r\n\r\n\t\t_nulling: function() {\r\n\t\t\trootEl =\r\n\t\t\tdragEl =\r\n\t\t\tparentEl =\r\n\t\t\tghostEl =\r\n\t\t\tnextEl =\r\n\t\t\tcloneEl =\r\n\t\t\tlastDownEl =\r\n\r\n\t\t\tscrollEl =\r\n\t\t\tscrollParentEl =\r\n\t\t\tautoScrolls.length =\r\n\r\n\t\t\tpointerElemChangedInterval =\r\n\t\t\tlastPointerElemX =\r\n\t\t\tlastPointerElemY =\r\n\r\n\t\t\ttapEvt =\r\n\t\t\ttouchEvt =\r\n\r\n\t\t\tmoved =\r\n\t\t\tnewIndex =\r\n\t\t\toldIndex =\r\n\r\n\t\t\tlastTarget =\r\n\t\t\tlastDirection =\r\n\r\n\t\t\tforRepaintDummy =\r\n\t\t\trealDragElRect =\r\n\r\n\t\t\tputSortable =\r\n\t\t\tactiveGroup =\r\n\t\t\tSortable.active = null;\r\n\r\n\t\t\tsavedInputChecked.forEach(function (el) {\r\n\t\t\t\tel.checked = true;\r\n\t\t\t});\r\n\r\n\t\t\tsavedInputChecked.length = 0;\r\n\t\t},\r\n\r\n\t\thandleEvent: function (/**Event*/evt) {\r\n\t\t\tswitch (evt.type) {\r\n\t\t\t\tcase 'drop':\r\n\t\t\t\tcase 'dragend':\r\n\t\t\t\t\tthis._onDrop(evt);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'dragenter':\r\n\t\t\t\tcase 'dragover':\r\n\t\t\t\t\tif (dragEl) {\r\n\t\t\t\t\t\tthis._onDragOver(evt);\r\n\t\t\t\t\t\t_globalDragOver(evt);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'selectstart':\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Serializes the item into an array of string.\r\n\t\t * @returns {String[]}\r\n\t\t */\r\n\t\ttoArray: function () {\r\n\t\t\tvar order = [],\r\n\t\t\t\tel,\r\n\t\t\t\tchildren = this.el.children,\r\n\t\t\t\ti = 0,\r\n\t\t\t\tn = children.length,\r\n\t\t\t\toptions = this.options;\r\n\r\n\t\t\tfor (; i < n; i++) {\r\n\t\t\t\tel = children[i];\r\n\t\t\t\tif (_closest(el, options.draggable, this.el, false)) {\r\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn order;\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Sorts the elements according to the array.\r\n\t\t * @param  {String[]}  order  order of the items\r\n\t\t */\r\n\t\tsort: function (order) {\r\n\t\t\tvar items = {}, rootEl = this.el;\r\n\r\n\t\t\tthis.toArray().forEach(function (id, i) {\r\n\t\t\t\tvar el = rootEl.children[i];\r\n\r\n\t\t\t\tif (_closest(el, this.options.draggable, rootEl, false)) {\r\n\t\t\t\t\titems[id] = el;\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\torder.forEach(function (id) {\r\n\t\t\t\tif (items[id]) {\r\n\t\t\t\t\trootEl.removeChild(items[id]);\r\n\t\t\t\t\trootEl.appendChild(items[id]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Save the current sorting\r\n\t\t */\r\n\t\tsave: function () {\r\n\t\t\tvar store = this.options.store;\r\n\t\t\tstore && store.set && store.set(this);\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\r\n\t\t * @param   {HTMLElement}  el\r\n\t\t * @param   {String}       [selector]  default: `options.draggable`\r\n\t\t * @returns {HTMLElement|null}\r\n\t\t */\r\n\t\tclosest: function (el, selector) {\r\n\t\t\treturn _closest(el, selector || this.options.draggable, this.el, false);\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Set/get option\r\n\t\t * @param   {string} name\r\n\t\t * @param   {*}      [value]\r\n\t\t * @returns {*}\r\n\t\t */\r\n\t\toption: function (name, value) {\r\n\t\t\tvar options = this.options;\r\n\r\n\t\t\tif (value === void 0) {\r\n\t\t\t\treturn options[name];\r\n\t\t\t} else {\r\n\t\t\t\toptions[name] = value;\r\n\r\n\t\t\t\tif (name === 'group') {\r\n\t\t\t\t\t_prepareGroup(options);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Destroy\r\n\t\t */\r\n\t\tdestroy: function () {\r\n\t\t\tvar el = this.el;\r\n\r\n\t\t\tel[expando] = null;\r\n\r\n\t\t\t_off(el, 'mousedown', this._onTapStart);\r\n\t\t\t_off(el, 'touchstart', this._onTapStart);\r\n\t\t\t_off(el, 'pointerdown', this._onTapStart);\r\n\r\n\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\t_off(el, 'dragover', this);\r\n\t\t\t\t_off(el, 'dragenter', this);\r\n\t\t\t}\r\n\t\t\t// Remove draggable attributes\r\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\r\n\t\t\t\tel.removeAttribute('draggable');\r\n\t\t\t});\r\n\r\n\t\t\tthis._onDrop();\r\n\r\n\t\t\tsortables.splice(sortables.indexOf(this.el), 1);\r\n\r\n\t\t\tthis.el = el = null;\r\n\t\t},\r\n\r\n\t\t_hideClone: function() {\r\n\t\t\tif (!cloneEl.cloneHidden) {\r\n\t\t\t\t_css(cloneEl, 'display', 'none');\r\n\t\t\t\tcloneEl.cloneHidden = true;\r\n\t\t\t\tif (cloneEl.parentNode && this.options.removeCloneOnHide) {\r\n\t\t\t\t\tcloneEl.parentNode.removeChild(cloneEl);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_showClone: function(putSortable) {\r\n\t\t\tif (putSortable.lastPutMode !== 'clone') {\r\n\t\t\t\tthis._hideClone();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (cloneEl.cloneHidden) {\r\n\t\t\t\t// show clone at dragEl or original position\r\n\t\t\t\tif (rootEl.contains(dragEl) && !this.options.group.revertClone) {\r\n\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\r\n\t\t\t\t} else if (nextEl) {\r\n\t\t\t\t\trootEl.insertBefore(cloneEl, nextEl);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trootEl.appendChild(cloneEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.options.group.revertClone) {\r\n\t\t\t\t\tthis._animate(dragEl, cloneEl);\r\n\t\t\t\t}\r\n\t\t\t\t_css(cloneEl, 'display', '');\r\n\t\t\t\tcloneEl.cloneHidden = false;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tfunction _closest(/**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx, includeCTX) {\r\n\t\tif (el) {\r\n\t\t\tctx = ctx || document;\r\n\r\n\t\t\tdo {\r\n\t\t\t\tif ((selector === '>*' && el.parentNode === ctx) || _matches(el, selector) || (includeCTX && el === ctx)) {\r\n\t\t\t\t\treturn el;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (el === ctx) break;\r\n\t\t\t\t/* jshint boss:true */\r\n\t\t\t} while (el = _getParentOrHost(el));\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\tfunction _getParentOrHost(el) {\r\n\t\treturn (el.host && el !== document && el.host.nodeType)\r\n\t\t\t? el.host\r\n\t\t\t: el.parentNode;\r\n\t}\r\n\r\n\r\n\tfunction _globalDragOver(/**Event*/evt) {\r\n\t\tif (evt.dataTransfer) {\r\n\t\t\tevt.dataTransfer.dropEffect = 'move';\r\n\t\t}\r\n\t\tevt.cancelable && evt.preventDefault();\r\n\t}\r\n\r\n\r\n\tfunction _on(el, event, fn) {\r\n\t\tel.addEventListener(event, fn, captureMode);\r\n\t}\r\n\r\n\r\n\tfunction _off(el, event, fn) {\r\n\t\tel.removeEventListener(event, fn, captureMode);\r\n\t}\r\n\r\n\r\n\tfunction _toggleClass(el, name, state) {\r\n\t\tif (el && name) {\r\n\t\t\tif (el.classList) {\r\n\t\t\t\tel.classList[state ? 'add' : 'remove'](name);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\r\n\t\t\t\tel.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction _css(el, prop, val) {\r\n\t\tvar style = el && el.style;\r\n\r\n\t\tif (style) {\r\n\t\t\tif (val === void 0) {\r\n\t\t\t\tif (document.defaultView && document.defaultView.getComputedStyle) {\r\n\t\t\t\t\tval = document.defaultView.getComputedStyle(el, '');\r\n\t\t\t\t}\r\n\t\t\t\telse if (el.currentStyle) {\r\n\t\t\t\t\tval = el.currentStyle;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn prop === void 0 ? val : val[prop];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!(prop in style) && prop.indexOf('webkit') === -1) {\r\n\t\t\t\t\tprop = '-webkit-' + prop;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstyle[prop] = val + (typeof val === 'string' ? '' : 'px');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _matrix(el) {\r\n\t\tvar appliedTransforms = '';\r\n\t\tdo {\r\n\t\t\tvar transform = _css(el, 'transform');\r\n\r\n\t\t\tif (transform && transform !== 'none') {\r\n\t\t\t\tappliedTransforms = transform + ' ' + appliedTransforms;\r\n\t\t\t}\r\n\t\t\t/* jshint boss:true */\r\n\t\t} while (el = el.parentNode);\r\n\r\n\t\tif (window.DOMMatrix) {\r\n\t\t\treturn new DOMMatrix(appliedTransforms);\r\n\t\t} else if (window.WebKitCSSMatrix) {\r\n\t\t\treturn new WebKitCSSMatrix(appliedTransforms);\r\n\t\t} else if (window.CSSMatrix) {\r\n\t\t\treturn new CSSMatrix(appliedTransforms);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction _find(ctx, tagName, iterator) {\r\n\t\tif (ctx) {\r\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\r\n\r\n\t\t\tif (iterator) {\r\n\t\t\t\tfor (; i < n; i++) {\r\n\t\t\t\t\titerator(list[i], i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn list;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\r\n\r\n\tfunction _dispatchEvent(sortable, rootEl, name, targetEl, toEl, fromEl, startIndex, newIndex, originalEvt) {\r\n\t\tsortable = (sortable || rootEl[expando]);\r\n\t\tvar evt,\r\n\t\t\toptions = sortable.options,\r\n\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\r\n\t\t// Support for new CustomEvent feature\r\n\t\tif (window.CustomEvent && !IE11OrLess && !Edge) {\r\n\t\t\tevt = new CustomEvent(name, {\r\n\t\t\t\tbubbles: true,\r\n\t\t\t\tcancelable: true\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tevt = document.createEvent('Event');\r\n\t\t\tevt.initEvent(name, true, true);\r\n\t\t}\r\n\r\n\t\tevt.to = toEl || rootEl;\r\n\t\tevt.from = fromEl || rootEl;\r\n\t\tevt.item = targetEl || rootEl;\r\n\t\tevt.clone = cloneEl;\r\n\r\n\t\tevt.oldIndex = startIndex;\r\n\t\tevt.newIndex = newIndex;\r\n\r\n\t\tevt.originalEvent = originalEvt;\r\n\r\n\t\tif (rootEl) {\r\n\t\t\trootEl.dispatchEvent(evt);\r\n\t        }\r\n\r\n\t\tif (options[onName]) {\r\n\t\t\toptions[onName].call(sortable, evt);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\r\n\t\tvar evt,\r\n\t\t\tsortable = fromEl[expando],\r\n\t\t\tonMoveFn = sortable.options.onMove,\r\n\t\t\tretVal;\r\n\t\t// Support for new CustomEvent feature\r\n\t\tif (window.CustomEvent && !IE11OrLess && !Edge) {\r\n\t\t\tevt = new CustomEvent('move', {\r\n\t\t\t\tbubbles: true,\r\n\t\t\t\tcancelable: true\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tevt = document.createEvent('Event');\r\n\t\t\tevt.initEvent('move', true, true);\r\n\t\t}\r\n\r\n\t\tevt.to = toEl;\r\n\t\tevt.from = fromEl;\r\n\t\tevt.dragged = dragEl;\r\n\t\tevt.draggedRect = dragRect;\r\n\t\tevt.related = targetEl || toEl;\r\n\t\tevt.relatedRect = targetRect || _getRect(toEl);\r\n\t\tevt.willInsertAfter = willInsertAfter;\r\n\r\n\t\tevt.originalEvent = originalEvt;\r\n\r\n\t\tfromEl.dispatchEvent(evt);\r\n\r\n\t\tif (onMoveFn) {\r\n\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\r\n\t\t}\r\n\r\n\t\treturn retVal;\r\n\t}\r\n\r\n\tfunction _disableDraggable(el) {\r\n\t\tel.draggable = false;\r\n\t}\r\n\r\n\tfunction _unsilent() {\r\n\t\t_silent = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\r\n\t * and non-draggable elements\r\n\t * @param  {HTMLElement} el       The parent element\r\n\t * @param  {Number} childNum      The index of the child\r\n\t * @param  {Object} options       Parent Sortable's options\r\n\t * @return {HTMLElement}          The child at index childNum, or null if not found\r\n\t */\r\n\tfunction _getChild(el, childNum, options) {\r\n\t\tvar currentChild = 0,\r\n\t\t\ti = 0,\r\n\t\t\tchildren = el.children;\r\n\r\n\t\twhile (i < children.length) {\r\n\t\t\tif (\r\n\t\t\t\tchildren[i].style.display !== 'none' &&\r\n\t\t\t\tchildren[i] !== ghostEl &&\r\n\t\t\t\tchildren[i] !== dragEl &&\r\n\t\t\t\t_closest(children[i], options.draggable, el, false)\r\n\t\t\t) {\r\n\t\t\t\tif (currentChild === childNum) {\r\n\t\t\t\t\treturn children[i];\r\n\t\t\t\t}\r\n\t\t\t\tcurrentChild++;\r\n\t\t\t}\r\n\r\n\t\t\ti++;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the last child in the el, ignoring ghostEl\r\n\t * @param  {HTMLElement} el       Parent element\r\n\t * @return {HTMLElement}          The last child, ignoring ghostEl\r\n\t */\r\n\tfunction _lastChild(el) {\r\n\t\tvar last = el.lastElementChild;\r\n\r\n\t\tif (last === ghostEl) {\r\n\t\t\tlast = el.children[el.childElementCount - 2];\r\n\t\t}\r\n\r\n\t\treturn last || null;\r\n\t}\r\n\r\n\tfunction _ghostIsLast(evt, axis, el) {\r\n\t\tvar elRect = _getRect(_lastChild(el)),\r\n\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\r\n\t\t\tmouseOnOppAxis = axis === 'vertical' ? evt.clientX : evt.clientY,\r\n\t\t\ttargetS2 = axis === 'vertical' ? elRect.bottom : elRect.right,\r\n\t\t\ttargetS1Opp = axis === 'vertical' ? elRect.left : elRect.top,\r\n\t\t\ttargetS2Opp = axis === 'vertical' ? elRect.right : elRect.bottom;\r\n\r\n\t\treturn (\r\n\t\t\tmouseOnOppAxis > targetS1Opp &&\r\n\t\t\tmouseOnOppAxis < targetS2Opp &&\r\n\t\t\tmouseOnAxis > targetS2\r\n\t\t);\r\n\t}\r\n\r\n\tfunction _getSwapDirection(evt, target, axis, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\r\n\t\tvar targetRect = _getRect(target),\r\n\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\r\n\t\t\ttargetLength = axis === 'vertical' ? targetRect.height : targetRect.width,\r\n\t\t\ttargetS1 = axis === 'vertical' ? targetRect.top : targetRect.left,\r\n\t\t\ttargetS2 = axis === 'vertical' ? targetRect.bottom : targetRect.right,\r\n\t\t\tdragRect = _getRect(dragEl),\r\n\t\t\tinvert = false;\r\n\r\n\r\n\t\tif (!invertSwap) {\r\n\t\t\t// Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\r\n\t\t\tif (isLastTarget && targetMoveDistance < targetLength * swapThreshold) { // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\r\n\t\t\t\t// check if past first invert threshold on side opposite of lastDirection\r\n\t\t\t\tif (!pastFirstInvertThresh &&\r\n\t\t\t\t\t(lastDirection === 1 ?\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tmouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2\r\n\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tmouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t\t{\r\n\t\t\t\t\t// past first invert threshold, do not restrict inverted threshold to dragEl shadow\r\n\t\t\t\t\tpastFirstInvertThresh = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!pastFirstInvertThresh) {\r\n\t\t\t\t\tvar dragS1 = axis === 'vertical' ? dragRect.top : dragRect.left,\r\n\t\t\t\t\t\tdragS2 = axis === 'vertical' ? dragRect.bottom : dragRect.right;\r\n\t\t\t\t\t// dragEl shadow (target move distance shadow)\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tlastDirection === 1 ?\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tmouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\r\n\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tmouseOnAxis > targetS2 - targetMoveDistance\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn lastDirection * -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinvert = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Regular\r\n\t\t\t\tif (\r\n\t\t\t\t\tmouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold) / 2) &&\r\n\t\t\t\t\tmouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold) / 2)\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? -1 : 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinvert = invert || invertSwap;\r\n\r\n\t\tif (invert) {\r\n\t\t\t// Invert of regular\r\n\t\t\tif (\r\n\t\t\t\tmouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold / 2) ||\r\n\t\t\t\tmouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold / 2)\r\n\t\t\t)\r\n\t\t\t{\r\n\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? 1 : -1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the direction dragEl must be swapped relative to target in order to make it\r\n\t * seem that dragEl has been \"inserted\" into that element's position\r\n\t * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\r\n\t * @param  {Object} options           options of the parent sortable\r\n\t * @return {Number}                   Direction dragEl must be swapped\r\n\t */\r\n\tfunction _getInsertDirection(target, options) {\r\n\t\tvar dragElIndex = _index(dragEl, options.draggable),\r\n\t\t\ttargetIndex = _index(target, options.draggable);\r\n\r\n\t\tif (dragElIndex < targetIndex) {\r\n\t\t\treturn 1;\r\n\t\t} else {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generate id\r\n\t * @param   {HTMLElement} el\r\n\t * @returns {String}\r\n\t * @private\r\n\t */\r\n\tfunction _generateId(el) {\r\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\r\n\t\t\ti = str.length,\r\n\t\t\tsum = 0;\r\n\r\n\t\twhile (i--) {\r\n\t\t\tsum += str.charCodeAt(i);\r\n\t\t}\r\n\r\n\t\treturn sum.toString(36);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index of an element within its parent for a selected set of\r\n\t * elements\r\n\t * @param  {HTMLElement} el\r\n\t * @param  {selector} selector\r\n\t * @return {number}\r\n\t */\r\n\tfunction _index(el, selector) {\r\n\t\tvar index = 0;\r\n\r\n\t\tif (!el || !el.parentNode) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\twhile (el && (el = el.previousElementSibling)) {\r\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== cloneEl) {\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\t}\r\n\r\n\tfunction _matches(/**HTMLElement*/el, /**String*/selector) {\r\n\t\tif (el) {\r\n\t\t\ttry {\r\n\t\t\t\tif (el.matches) {\r\n\t\t\t\t\treturn el.matches(selector);\r\n\t\t\t\t} else if (el.msMatchesSelector) {\r\n\t\t\t\t\treturn el.msMatchesSelector(selector);\r\n\t\t\t\t} else if (el.webkitMatchesSelector) {\r\n\t\t\t\t\treturn el.webkitMatchesSelector(selector);\r\n\t\t\t\t}\r\n\t\t\t} catch(_) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar _throttleTimeout;\r\n\tfunction _throttle(callback, ms) {\r\n\t\treturn function () {\r\n\t\t\tif (!_throttleTimeout) {\r\n\t\t\t\tvar args = arguments,\r\n\t\t\t\t\t_this = this;\r\n\r\n\t\t\t\t_throttleTimeout = setTimeout(function () {\r\n\t\t\t\t\tif (args.length === 1) {\r\n\t\t\t\t\t\tcallback.call(_this, args[0]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcallback.apply(_this, args);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_throttleTimeout = void 0;\r\n\t\t\t\t}, ms);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tfunction _cancelThrottle() {\r\n\t\tclearTimeout(_throttleTimeout);\r\n\t\t_throttleTimeout = void 0;\r\n\t}\r\n\r\n\tfunction _extend(dst, src) {\r\n\t\tif (dst && src) {\r\n\t\t\tfor (var key in src) {\r\n\t\t\t\tif (src.hasOwnProperty(key)) {\r\n\t\t\t\t\tdst[key] = src[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn dst;\r\n\t}\r\n\r\n\tfunction _clone(el) {\r\n\t\tif (Polymer && Polymer.dom) {\r\n\t\t\treturn Polymer.dom(el).cloneNode(true);\r\n\t\t}\r\n\t\telse if ($) {\r\n\t\t\treturn $(el).clone(true)[0];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn el.cloneNode(true);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _saveInputCheckedState(root) {\r\n\t\tsavedInputChecked.length = 0;\r\n\r\n\t\tvar inputs = root.getElementsByTagName('input');\r\n\t\tvar idx = inputs.length;\r\n\r\n\t\twhile (idx--) {\r\n\t\t\tvar el = inputs[idx];\r\n\t\t\tel.checked && savedInputChecked.push(el);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _nextTick(fn) {\r\n\t\treturn setTimeout(fn, 0);\r\n\t}\r\n\r\n\tfunction _cancelNextTick(id) {\r\n\t\treturn clearTimeout(id);\r\n\t}\r\n\r\n\r\n\tfunction _preventScroll(evt) {\r\n\t\tif ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\r\n\t\t\tevt.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the \"bounding client rect\" of given element\r\n\t * @param  {HTMLElement} el                The element whose boundingClientRect is wanted\r\n\t * @param  {[HTMLElement]} container       the parent the element will be placed in\r\n\t * @param  {[Boolean]} adjustForTransform  Whether the rect should compensate for parent's transform\r\n\t * (used for fixed positioning on el)\r\n\t * @return {Object}                        The boundingClientRect of el\r\n\t */\r\n\tfunction _getRect(el, container, adjustForTransform) {\r\n\t\tif (!el.getBoundingClientRect && el !== win) return;\r\n\r\n\t\tvar elRect,\r\n\t\t\ttop,\r\n\t\t\tleft,\r\n\t\t\tbottom,\r\n\t\t\tright,\r\n\t\t\theight,\r\n\t\t\twidth;\r\n\r\n\t\tif (el !== win) {\r\n\t\t\telRect = el.getBoundingClientRect();\r\n\t\t\ttop = elRect.top;\r\n\t\t\tleft = elRect.left;\r\n\t\t\tbottom = elRect.bottom;\r\n\t\t\tright = elRect.right;\r\n\t\t\theight = elRect.height;\r\n\t\t\twidth = elRect.width;\r\n\t\t} else {\r\n\t\t\ttop = 0;\r\n\t\t\tleft = 0;\r\n\t\t\tbottom = window.innerHeight;\r\n\t\t\tright = window.innerWidth;\r\n\t\t\theight = window.innerHeight;\r\n\t\t\twidth = window.innerWidth;\r\n\t\t}\r\n\r\n\t\tif (adjustForTransform && el !== win) {\r\n\t\t\t// Adjust for translate()\r\n\t\t\tcontainer = container || el.parentNode;\r\n\r\n\t\t\t// solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\r\n\t\t\t// Not needed on <= IE11\r\n\t\t\tif (!IE11OrLess) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tif (container && container.getBoundingClientRect && _css(container, 'transform') !== 'none') {\r\n\t\t\t\t\t\tvar containerRect = container.getBoundingClientRect();\r\n\r\n\t\t\t\t\t\t// Set relative to edges of padding box of container\r\n\t\t\t\t\t\ttop -= containerRect.top + parseInt(_css(container, 'border-top-width'));\r\n\t\t\t\t\t\tleft -= containerRect.left + parseInt(_css(container, 'border-left-width'));\r\n\t\t\t\t\t\tbottom = top + elRect.height;\r\n\t\t\t\t\t\tright = left + elRect.width;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/* jshint boss:true */\r\n\t\t\t\t} while (container = container.parentNode);\r\n\t\t\t}\r\n\r\n\t\t\t// Adjust for scale()\r\n\t\t\tvar matrix = _matrix(el),\r\n\t\t\t\tscaleX = matrix && matrix.a,\r\n\t\t\t\tscaleY = matrix && matrix.d;\r\n\r\n\t\t\tif (matrix) {\r\n\t\t\t\ttop /= scaleY;\r\n\t\t\t\tleft /= scaleX;\r\n\r\n\t\t\t\twidth /= scaleX;\r\n\t\t\t\theight /= scaleY;\r\n\r\n\t\t\t\tbottom = top + height;\r\n\t\t\t\tright = left + width;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttop: top,\r\n\t\t\tleft: left,\r\n\t\t\tbottom: bottom,\r\n\t\t\tright: right,\r\n\t\t\twidth: width,\r\n\t\t\theight: height\r\n\t\t};\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Checks if a side of an element is scrolled past a side of it's parents\r\n\t * @param  {HTMLElement}  el       The element who's side being scrolled out of view is in question\r\n\t * @param  {String}       side     Side of the element in question ('top', 'left', 'right', 'bottom')\r\n\t * @return {Boolean}               Whether the element is overflowing the viewport on the given side of it's parent\r\n\t */\r\n\tfunction _isScrolledPast(el, side) {\r\n\t\tvar parent = _getParentAutoScrollElement(parent, true),\r\n\t\t\telSide = _getRect(el)[side];\r\n\r\n\t\t/* jshint boss:true */\r\n\t\twhile (parent) {\r\n\t\t\tvar parentSide = _getRect(parent)[side],\r\n\t\t\t\tvisible;\r\n\r\n\t\t\tif (side === 'top' || side === 'left') {\r\n\t\t\t\tvisible = elSide >= parentSide;\r\n\t\t\t} else {\r\n\t\t\t\tvisible = elSide <= parentSide;\r\n\t\t\t}\r\n\r\n\t\t\tif (!visible) return true;\r\n\r\n\t\t\tif (parent === win) break;\r\n\r\n\t\t\tparent = _getParentAutoScrollElement(parent, false);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t// Export utils\r\n\tSortable.utils = {\r\n\t\ton: _on,\r\n\t\toff: _off,\r\n\t\tcss: _css,\r\n\t\tfind: _find,\r\n\t\tis: function (el, selector) {\r\n\t\t\treturn !!_closest(el, selector, el, false);\r\n\t\t},\r\n\t\textend: _extend,\r\n\t\tthrottle: _throttle,\r\n\t\tclosest: _closest,\r\n\t\ttoggleClass: _toggleClass,\r\n\t\tclone: _clone,\r\n\t\tindex: _index,\r\n\t\tnextTick: _nextTick,\r\n\t\tcancelNextTick: _cancelNextTick,\r\n\t\tdetectDirection: _detectDirection,\r\n\t\tgetChild: _getChild\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Create sortable instance\r\n\t * @param {HTMLElement}  el\r\n\t * @param {Object}      [options]\r\n\t */\r\n\tSortable.create = function (el, options) {\r\n\t\treturn new Sortable(el, options);\r\n\t};\r\n\r\n\r\n\t// Export\r\n\tSortable.version = '1.8.0';\r\n\treturn Sortable;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sortablejs/Sortable.js\n// module id = Lokx\n// module chunks = 0","import axios from 'axios'\r\n\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'\r\n\r\n// 请求拦截器\r\naxios.interceptors.request.use(function(config) {\r\n  return config;\r\n}, function(error) {\r\n  return Promise.reject(error);\r\n})\r\n// 响应拦截器\r\naxios.interceptors.response.use(function(response) {\r\n  return response;\r\n}, function(error) {\r\n  return Promise.reject(error);\r\n})\r\n\r\n// 封装axios的post请求\r\nexport function fetch(url, params) {\r\n  return new Promise((resolve, reject) => {\r\n    axios.post(url, params)\r\n      .then(response => {\r\n        resolve(response.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      })\r\n  })\r\n}\r\n\r\nexport function get(url) {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(url)\r\n      .then(response => {\r\n        resolve(response.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      })\r\n  })\r\n}\r\n\r\nexport default {\r\n  post_news(url, params) {\r\n    return fetch(url, params);\r\n  },\r\n  Test(url){\r\n    return get(url);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/api.js"],"sourceRoot":""}